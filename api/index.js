Index.PACKAGES = {"scala.collection" : [], "com.spotify.featran.spark" : [{"name" : "com.spotify.featran.spark.SparkCollectionType", "shortDescription" : "CollectionType for extraction from Apache Spark RDD type.", "object" : "com\/spotify\/featran\/spark\/package$$SparkCollectionType$.html", "members_object" : [{"label" : "pure", "tail" : "(ma: RDD[A])(b: B)(arg0: ClassTag[B]): RDD[B]", "member" : "com.spotify.featran.spark.SparkCollectionType.pure", "link" : "com\/spotify\/featran\/spark\/package$$SparkCollectionType$.html#pure[A,B](ma:org.apache.spark.rdd.RDD[A])(b:B)(implicitevidence$3:scala.reflect.ClassTag[B]):org.apache.spark.rdd.RDD[B]", "kind" : "def"}, {"label" : "cross", "tail" : "(ma: RDD[A])(mb: RDD[B])(arg0: ClassTag[B]): RDD[(A, B)]", "member" : "com.spotify.featran.spark.SparkCollectionType.cross", "link" : "com\/spotify\/featran\/spark\/package$$SparkCollectionType$.html#cross[A,B](ma:org.apache.spark.rdd.RDD[A])(mb:org.apache.spark.rdd.RDD[B])(implicitevidence$2:scala.reflect.ClassTag[B]):org.apache.spark.rdd.RDD[(A,B)]", "kind" : "def"}, {"label" : "reduce", "tail" : "(ma: RDD[A])(f: (A, A) ⇒ A): RDD[A]", "member" : "com.spotify.featran.spark.SparkCollectionType.reduce", "link" : "com\/spotify\/featran\/spark\/package$$SparkCollectionType$.html#reduce[A](ma:org.apache.spark.rdd.RDD[A])(f:(A,A)=>A):org.apache.spark.rdd.RDD[A]", "kind" : "def"}, {"label" : "map", "tail" : "(ma: RDD[A])(f: (A) ⇒ B)(arg0: ClassTag[B]): RDD[B]", "member" : "com.spotify.featran.spark.SparkCollectionType.map", "link" : "com\/spotify\/featran\/spark\/package$$SparkCollectionType$.html#map[A,B](ma:org.apache.spark.rdd.RDD[A])(f:A=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):org.apache.spark.rdd.RDD[B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/spark\/package$$SparkCollectionType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/spark\/package$$SparkCollectionType$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/spark\/package$$SparkCollectionType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/spark\/package$$SparkCollectionType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/spark\/package$$SparkCollectionType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/spark\/package$$SparkCollectionType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/spark\/package$$SparkCollectionType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/spark\/package$$SparkCollectionType$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/spark\/package$$SparkCollectionType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/spark\/package$$SparkCollectionType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/spark\/package$$SparkCollectionType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/spark\/package$$SparkCollectionType$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/featran\/spark\/package$$SparkCollectionType$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/spark\/package$$SparkCollectionType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/featran\/spark\/package$$SparkCollectionType$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/featran\/spark\/package$$SparkCollectionType$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/spark\/package$$SparkCollectionType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/spark\/package$$SparkCollectionType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/spark\/package$$SparkCollectionType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "com.spotify.featran.flink" : [{"name" : "com.spotify.featran.flink.FlinkCollectionType", "shortDescription" : "CollectionType for extraction from Apache Flink DataSet type.", "object" : "com\/spotify\/featran\/flink\/package$$FlinkCollectionType$.html", "members_object" : [{"label" : "pure", "tail" : "(ma: DataSet[A])(b: B)(arg0: ClassTag[B]): DataSet[B]", "member" : "com.spotify.featran.flink.FlinkCollectionType.pure", "link" : "com\/spotify\/featran\/flink\/package$$FlinkCollectionType$.html#pure[A,B](ma:org.apache.flink.api.scala.DataSet[A])(b:B)(implicitevidence$3:scala.reflect.ClassTag[B]):org.apache.flink.api.scala.DataSet[B]", "kind" : "def"}, {"label" : "cross", "tail" : "(ma: DataSet[A])(mb: DataSet[B])(arg0: ClassTag[B]): DataSet[(A, B)]", "member" : "com.spotify.featran.flink.FlinkCollectionType.cross", "link" : "com\/spotify\/featran\/flink\/package$$FlinkCollectionType$.html#cross[A,B](ma:org.apache.flink.api.scala.DataSet[A])(mb:org.apache.flink.api.scala.DataSet[B])(implicitevidence$2:scala.reflect.ClassTag[B]):org.apache.flink.api.scala.DataSet[(A,B)]", "kind" : "def"}, {"label" : "reduce", "tail" : "(ma: DataSet[A])(f: (A, A) ⇒ A): DataSet[A]", "member" : "com.spotify.featran.flink.FlinkCollectionType.reduce", "link" : "com\/spotify\/featran\/flink\/package$$FlinkCollectionType$.html#reduce[A](ma:org.apache.flink.api.scala.DataSet[A])(f:(A,A)=>A):org.apache.flink.api.scala.DataSet[A]", "kind" : "def"}, {"label" : "map", "tail" : "(ma: DataSet[A])(f: (A) ⇒ B)(arg0: ClassTag[B]): DataSet[B]", "member" : "com.spotify.featran.flink.FlinkCollectionType.map", "link" : "com\/spotify\/featran\/flink\/package$$FlinkCollectionType$.html#map[A,B](ma:org.apache.flink.api.scala.DataSet[A])(f:A=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):org.apache.flink.api.scala.DataSet[B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/flink\/package$$FlinkCollectionType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/flink\/package$$FlinkCollectionType$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/flink\/package$$FlinkCollectionType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/flink\/package$$FlinkCollectionType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/flink\/package$$FlinkCollectionType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/flink\/package$$FlinkCollectionType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/flink\/package$$FlinkCollectionType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/flink\/package$$FlinkCollectionType$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/flink\/package$$FlinkCollectionType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/flink\/package$$FlinkCollectionType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/flink\/package$$FlinkCollectionType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/flink\/package$$FlinkCollectionType$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/featran\/flink\/package$$FlinkCollectionType$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/flink\/package$$FlinkCollectionType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/featran\/flink\/package$$FlinkCollectionType$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/featran\/flink\/package$$FlinkCollectionType$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/flink\/package$$FlinkCollectionType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/flink\/package$$FlinkCollectionType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/flink\/package$$FlinkCollectionType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "com.spotify.featran.scalding" : [{"name" : "com.spotify.featran.scalding.ScaldingCollectionType", "shortDescription" : "CollectionType for extraction from Scalding TypedPipe type.", "object" : "com\/spotify\/featran\/scalding\/package$$ScaldingCollectionType$.html", "members_object" : [{"label" : "pure", "tail" : "(ma: TypedPipe[A])(b: B)(arg0: ClassTag[B]): TypedPipe[B]", "member" : "com.spotify.featran.scalding.ScaldingCollectionType.pure", "link" : "com\/spotify\/featran\/scalding\/package$$ScaldingCollectionType$.html#pure[A,B](ma:com.twitter.scalding.typed.TypedPipe[A])(b:B)(implicitevidence$3:scala.reflect.ClassTag[B]):com.twitter.scalding.typed.TypedPipe[B]", "kind" : "def"}, {"label" : "cross", "tail" : "(ma: TypedPipe[A])(mb: TypedPipe[B])(arg0: ClassTag[B]): TypedPipe[(A, B)]", "member" : "com.spotify.featran.scalding.ScaldingCollectionType.cross", "link" : "com\/spotify\/featran\/scalding\/package$$ScaldingCollectionType$.html#cross[A,B](ma:com.twitter.scalding.typed.TypedPipe[A])(mb:com.twitter.scalding.typed.TypedPipe[B])(implicitevidence$2:scala.reflect.ClassTag[B]):com.twitter.scalding.typed.TypedPipe[(A,B)]", "kind" : "def"}, {"label" : "reduce", "tail" : "(ma: TypedPipe[A])(f: (A, A) ⇒ A): TypedPipe[A]", "member" : "com.spotify.featran.scalding.ScaldingCollectionType.reduce", "link" : "com\/spotify\/featran\/scalding\/package$$ScaldingCollectionType$.html#reduce[A](ma:com.twitter.scalding.typed.TypedPipe[A])(f:(A,A)=>A):com.twitter.scalding.typed.TypedPipe[A]", "kind" : "def"}, {"label" : "map", "tail" : "(ma: TypedPipe[A])(f: (A) ⇒ B)(arg0: ClassTag[B]): TypedPipe[B]", "member" : "com.spotify.featran.scalding.ScaldingCollectionType.map", "link" : "com\/spotify\/featran\/scalding\/package$$ScaldingCollectionType$.html#map[A,B](ma:com.twitter.scalding.typed.TypedPipe[A])(f:A=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):com.twitter.scalding.typed.TypedPipe[B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/scalding\/package$$ScaldingCollectionType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/scalding\/package$$ScaldingCollectionType$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/scalding\/package$$ScaldingCollectionType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/scalding\/package$$ScaldingCollectionType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/scalding\/package$$ScaldingCollectionType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/scalding\/package$$ScaldingCollectionType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/scalding\/package$$ScaldingCollectionType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/scalding\/package$$ScaldingCollectionType$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/scalding\/package$$ScaldingCollectionType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/scalding\/package$$ScaldingCollectionType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/scalding\/package$$ScaldingCollectionType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/scalding\/package$$ScaldingCollectionType$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/featran\/scalding\/package$$ScaldingCollectionType$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/scalding\/package$$ScaldingCollectionType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/featran\/scalding\/package$$ScaldingCollectionType$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/featran\/scalding\/package$$ScaldingCollectionType$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/scalding\/package$$ScaldingCollectionType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/scalding\/package$$ScaldingCollectionType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/scalding\/package$$ScaldingCollectionType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "com.spotify.featran.xgboost" : [{"name" : "com.spotify.featran.xgboost.SparseLabeledPoint", "shortDescription" : "Class to distinguish sparse LabeledPoint from its dense type.", "members_class" : [{"label" : "labeledPoint", "tail" : ": LabeledPoint", "member" : "com.spotify.featran.xgboost.SparseLabeledPoint.labeledPoint", "link" : "com\/spotify\/featran\/xgboost\/SparseLabeledPoint.html#labeledPoint:ml.dmlc.xgboost4j.LabeledPoint", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/xgboost\/SparseLabeledPoint.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/xgboost\/SparseLabeledPoint.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/xgboost\/SparseLabeledPoint.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/xgboost\/SparseLabeledPoint.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/xgboost\/SparseLabeledPoint.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/xgboost\/SparseLabeledPoint.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/xgboost\/SparseLabeledPoint.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/xgboost\/SparseLabeledPoint.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/xgboost\/SparseLabeledPoint.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/xgboost\/SparseLabeledPoint.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/xgboost\/SparseLabeledPoint.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/xgboost\/SparseLabeledPoint.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/featran\/xgboost\/SparseLabeledPoint.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/xgboost\/SparseLabeledPoint.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/featran\/xgboost\/SparseLabeledPoint.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/featran\/xgboost\/SparseLabeledPoint.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/xgboost\/SparseLabeledPoint.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/xgboost\/SparseLabeledPoint.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/xgboost\/SparseLabeledPoint.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/spotify\/featran\/xgboost\/SparseLabeledPoint.html", "kind" : "class"}], "org.apache.spark.rdd" : [{"name" : "org.apache.spark.rdd.RDDUtil", "shortDescription" : "", "object" : "org\/apache\/spark\/rdd\/RDDUtil$.html", "members_object" : [{"label" : "classTag", "tail" : "(rdd: RDD[T]): ClassTag[T]", "member" : "org.apache.spark.rdd.RDDUtil.classTag", "link" : "org\/apache\/spark\/rdd\/RDDUtil$.html#classTag[T](rdd:org.apache.spark.rdd.RDD[T]):scala.reflect.ClassTag[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/rdd\/RDDUtil$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/rdd\/RDDUtil$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/rdd\/RDDUtil$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/rdd\/RDDUtil$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/rdd\/RDDUtil$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/rdd\/RDDUtil$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/rdd\/RDDUtil$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/rdd\/RDDUtil$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/rdd\/RDDUtil$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/rdd\/RDDUtil$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/rdd\/RDDUtil$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/rdd\/RDDUtil$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/rdd\/RDDUtil$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/rdd\/RDDUtil$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/rdd\/RDDUtil$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/rdd\/RDDUtil$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/rdd\/RDDUtil$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/rdd\/RDDUtil$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/rdd\/RDDUtil$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "org.apache.spark" : [], "org.apache" : [], "com.spotify.featran.numpy" : [{"name" : "com.spotify.featran.numpy.NumPy", "shortDescription" : "Utilities for writing data as NumPy .npy files.", "object" : "com\/spotify\/featran\/numpy\/NumPy$.html", "members_object" : [{"label" : "write", "tail" : "(out: OutputStream, data: Iterator[Array[T]], numRows: Int, numCols: Int)(arg0: NumPyType[T]): Unit", "member" : "com.spotify.featran.numpy.NumPy.write", "link" : "com\/spotify\/featran\/numpy\/NumPy$.html#write[T](out:java.io.OutputStream,data:Iterator[Array[T]],numRows:Int,numCols:Int)(implicitevidence$5:com.spotify.featran.numpy.NumPyType[T]):Unit", "kind" : "def"}, {"label" : "write", "tail" : "(out: OutputStream, data: Array[T], shape: Seq[Int])(arg0: NumPyType[T]): Unit", "member" : "com.spotify.featran.numpy.NumPy.write", "link" : "com\/spotify\/featran\/numpy\/NumPy$.html#write[T](out:java.io.OutputStream,data:Array[T],shape:Seq[Int])(implicitevidence$4:com.spotify.featran.numpy.NumPyType[T]):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/numpy\/NumPy$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/numpy\/NumPy$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/numpy\/NumPy$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/numpy\/NumPy$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/numpy\/NumPy$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/numpy\/NumPy$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/numpy\/NumPy$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/numpy\/NumPy$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/numpy\/NumPy$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/numpy\/NumPy$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/numpy\/NumPy$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/numpy\/NumPy$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/featran\/numpy\/NumPy$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/numpy\/NumPy$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/featran\/numpy\/NumPy$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/featran\/numpy\/NumPy$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/numpy\/NumPy$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/numpy\/NumPy$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/numpy\/NumPy$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.spotify.featran.numpy.NumPyType", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/numpy\/NumPyType.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/numpy\/NumPyType.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/numpy\/NumPyType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/numpy\/NumPyType.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/numpy\/NumPyType.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/numpy\/NumPyType.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/numpy\/NumPyType.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/numpy\/NumPyType.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/numpy\/NumPyType.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/numpy\/NumPyType.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/numpy\/NumPyType.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/numpy\/NumPyType.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/featran\/numpy\/NumPyType.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/numpy\/NumPyType.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/featran\/numpy\/NumPyType.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/featran\/numpy\/NumPyType.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/numpy\/NumPyType.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/numpy\/NumPyType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/numpy\/NumPyType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "write", "tail" : "(out: OutputStream, value: T): Unit", "member" : "com.spotify.featran.numpy.NumPyType.write", "link" : "com\/spotify\/featran\/numpy\/NumPyType.html#write(out:java.io.OutputStream,value:T):Unit", "kind" : "abstract def"}, {"label" : "sizeOf", "tail" : "(): Int", "member" : "com.spotify.featran.numpy.NumPyType.sizeOf", "link" : "com\/spotify\/featran\/numpy\/NumPyType.html#sizeOf:Int", "kind" : "abstract def"}, {"label" : "descr", "tail" : "(): String", "member" : "com.spotify.featran.numpy.NumPyType.descr", "link" : "com\/spotify\/featran\/numpy\/NumPyType.html#descr:String", "kind" : "abstract def"}], "shortDescription" : "Type class for NumPy numeric types.", "object" : "com\/spotify\/featran\/numpy\/NumPyType$.html", "members_object" : [{"label" : "nonInheritedOps", "tail" : "", "member" : "com.spotify.featran.numpy.NumPyType.nonInheritedOps", "link" : "com\/spotify\/featran\/numpy\/NumPyType$.html#nonInheritedOps", "kind" : "object"}, {"label" : "ToNumPyTypeOps", "tail" : "", "member" : "com.spotify.featran.numpy.NumPyType.ToNumPyTypeOps", "link" : "com\/spotify\/featran\/numpy\/NumPyType$.html#ToNumPyTypeOpsextendsSerializable", "kind" : "trait"}, {"label" : "AllOps", "tail" : "", "member" : "com.spotify.featran.numpy.NumPyType.AllOps", "link" : "com\/spotify\/featran\/numpy\/NumPyType$.html#AllOps[T]extendsNumPyType.Ops[T]", "kind" : "trait"}, {"label" : "Ops", "tail" : "", "member" : "com.spotify.featran.numpy.NumPyType.Ops", "link" : "com\/spotify\/featran\/numpy\/NumPyType$.html#Ops[T]extendsSerializable", "kind" : "trait"}, {"label" : "ops", "tail" : "", "member" : "com.spotify.featran.numpy.NumPyType.ops", "link" : "com\/spotify\/featran\/numpy\/NumPyType$.html#ops", "kind" : "object"}, {"label" : "apply", "tail" : "(instance: NumPyType[T]): NumPyType[T]", "member" : "com.spotify.featran.numpy.NumPyType.apply", "link" : "com\/spotify\/featran\/numpy\/NumPyType$.html#apply[T](implicitinstance:com.spotify.featran.numpy.NumPyType[T]):com.spotify.featran.numpy.NumPyType[T]", "kind" : "def"}, {"label" : "doubleNumPyType", "tail" : ": NumPyType[Double]", "member" : "com.spotify.featran.numpy.NumPyType.doubleNumPyType", "link" : "com\/spotify\/featran\/numpy\/NumPyType$.html#doubleNumPyType:com.spotify.featran.numpy.NumPyType[Double]", "kind" : "implicit val"}, {"label" : "floatNumPyType", "tail" : ": NumPyType[Float]", "member" : "com.spotify.featran.numpy.NumPyType.floatNumPyType", "link" : "com\/spotify\/featran\/numpy\/NumPyType$.html#floatNumPyType:com.spotify.featran.numpy.NumPyType[Float]", "kind" : "implicit val"}, {"label" : "longNumPyType", "tail" : ": NumPyType[Long]", "member" : "com.spotify.featran.numpy.NumPyType.longNumPyType", "link" : "com\/spotify\/featran\/numpy\/NumPyType$.html#longNumPyType:com.spotify.featran.numpy.NumPyType[Long]", "kind" : "implicit val"}, {"label" : "intNumPyType", "tail" : ": NumPyType[Int]", "member" : "com.spotify.featran.numpy.NumPyType.intNumPyType", "link" : "com\/spotify\/featran\/numpy\/NumPyType$.html#intNumPyType:com.spotify.featran.numpy.NumPyType[Int]", "kind" : "implicit val"}, {"label" : "LittleEndianOutputStream", "tail" : "", "member" : "com.spotify.featran.numpy.NumPyType.LittleEndianOutputStream", "link" : "com\/spotify\/featran\/numpy\/NumPyType$.html#LittleEndianOutputStreamextendsAnyVal", "kind" : "implicit final class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/numpy\/NumPyType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/numpy\/NumPyType$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/numpy\/NumPyType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/numpy\/NumPyType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/numpy\/NumPyType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/numpy\/NumPyType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/numpy\/NumPyType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/numpy\/NumPyType$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/numpy\/NumPyType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/numpy\/NumPyType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/numpy\/NumPyType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/numpy\/NumPyType$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/featran\/numpy\/NumPyType$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/numpy\/NumPyType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/featran\/numpy\/NumPyType$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/featran\/numpy\/NumPyType$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/numpy\/NumPyType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/numpy\/NumPyType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/numpy\/NumPyType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/spotify\/featran\/numpy\/NumPyType.html", "kind" : "trait"}], "com.spotify.featran.tensorflow" : [{"name" : "com.spotify.featran.tensorflow.NamedTFFeature", "shortDescription" : "", "members_case class" : [{"member" : "com.spotify.featran.tensorflow.NamedTFFeature#<init>", "error" : "unsupported entity"}, {"label" : "f", "tail" : ": org.tensorflow.proto.example.Feature", "member" : "com.spotify.featran.tensorflow.NamedTFFeature.f", "link" : "com\/spotify\/featran\/tensorflow\/package$$NamedTFFeature.html#f:org.tensorflow.proto.example.Feature", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "com.spotify.featran.tensorflow.NamedTFFeature.name", "link" : "com\/spotify\/featran\/tensorflow\/package$$NamedTFFeature.html#name:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/tensorflow\/package$$NamedTFFeature.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/tensorflow\/package$$NamedTFFeature.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/tensorflow\/package$$NamedTFFeature.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/tensorflow\/package$$NamedTFFeature.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/tensorflow\/package$$NamedTFFeature.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/tensorflow\/package$$NamedTFFeature.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/tensorflow\/package$$NamedTFFeature.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/tensorflow\/package$$NamedTFFeature.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/tensorflow\/package$$NamedTFFeature.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/tensorflow\/package$$NamedTFFeature.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/tensorflow\/package$$NamedTFFeature.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/tensorflow\/package$$NamedTFFeature.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/tensorflow\/package$$NamedTFFeature.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/tensorflow\/package$$NamedTFFeature.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/tensorflow\/package$$NamedTFFeature.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/tensorflow\/package$$NamedTFFeature.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/spotify\/featran\/tensorflow\/package$$NamedTFFeature.html", "kind" : "case class"}, {"name" : "com.spotify.featran.tensorflow.TensorFlowFeatureBuilder", "shortDescription" : "", "members_case class" : [{"label" : "newBuilder", "tail" : "(): FeatureBuilder[Example]", "member" : "com.spotify.featran.tensorflow.TensorFlowFeatureBuilder.newBuilder", "link" : "com\/spotify\/featran\/tensorflow\/package$$TensorFlowFeatureBuilder.html#newBuilder:com.spotify.featran.FeatureBuilder[org.tensorflow.proto.example.Example]", "kind" : "def"}, {"label" : "result", "tail" : "(): Example", "member" : "com.spotify.featran.tensorflow.TensorFlowFeatureBuilder.result", "link" : "com\/spotify\/featran\/tensorflow\/package$$TensorFlowFeatureBuilder.html#result:org.tensorflow.proto.example.Example", "kind" : "def"}, {"label" : "skip", "tail" : "(n: Int): Unit", "member" : "com.spotify.featran.tensorflow.TensorFlowFeatureBuilder.skip", "link" : "com\/spotify\/featran\/tensorflow\/package$$TensorFlowFeatureBuilder.html#skip(n:Int):Unit", "kind" : "def"}, {"label" : "skip", "tail" : "(): Unit", "member" : "com.spotify.featran.tensorflow.TensorFlowFeatureBuilder.skip", "link" : "com\/spotify\/featran\/tensorflow\/package$$TensorFlowFeatureBuilder.html#skip():Unit", "kind" : "def"}, {"label" : "add", "tail" : "(name: String, value: Double): Unit", "member" : "com.spotify.featran.tensorflow.TensorFlowFeatureBuilder.add", "link" : "com\/spotify\/featran\/tensorflow\/package$$TensorFlowFeatureBuilder.html#add(name:String,value:Double):Unit", "kind" : "def"}, {"label" : "init", "tail" : "(dimension: Int): Unit", "member" : "com.spotify.featran.tensorflow.TensorFlowFeatureBuilder.init", "link" : "com\/spotify\/featran\/tensorflow\/package$$TensorFlowFeatureBuilder.html#init(dimension:Int):Unit", "kind" : "def"}, {"member" : "com.spotify.featran.tensorflow.TensorFlowFeatureBuilder#<init>", "error" : "unsupported entity"}, {"label" : "map", "tail" : "(f: (Example) ⇒ U): FeatureBuilder[U]", "member" : "com.spotify.featran.FeatureBuilder.map", "link" : "com\/spotify\/featran\/tensorflow\/package$$TensorFlowFeatureBuilder.html#map[U](f:T=>U):com.spotify.featran.FeatureBuilder[U]", "kind" : "def"}, {"label" : "add", "tail" : "(names: Iterable[String], values: M[Double])(ev: (M[Double]) ⇒ Seq[Double]): Unit", "member" : "com.spotify.featran.FeatureBuilder.add", "link" : "com\/spotify\/featran\/tensorflow\/package$$TensorFlowFeatureBuilder.html#add[M[_]](names:Iterable[String],values:M[Double])(implicitev:M[Double]=>Seq[Double]):Unit", "kind" : "def"}, {"label" : "prepare", "tail" : "(transformer: Transformer[_, _, _]): Unit", "member" : "com.spotify.featran.FeatureBuilder.prepare", "link" : "com\/spotify\/featran\/tensorflow\/package$$TensorFlowFeatureBuilder.html#prepare(transformer:com.spotify.featran.transformers.Transformer[_,_,_]):Unit", "kind" : "def"}, {"label" : "rejections", "tail" : "(): Map[String, FeatureRejection]", "member" : "com.spotify.featran.FeatureBuilder.rejections", "link" : "com\/spotify\/featran\/tensorflow\/package$$TensorFlowFeatureBuilder.html#rejections:Map[String,com.spotify.featran.FeatureRejection]", "kind" : "def"}, {"label" : "reject", "tail" : "(transformer: Transformer[_, _, _], reason: FeatureRejection): Unit", "member" : "com.spotify.featran.FeatureBuilder.reject", "link" : "com\/spotify\/featran\/tensorflow\/package$$TensorFlowFeatureBuilder.html#reject(transformer:com.spotify.featran.transformers.Transformer[_,_,_],reason:com.spotify.featran.FeatureRejection):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/tensorflow\/package$$TensorFlowFeatureBuilder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/tensorflow\/package$$TensorFlowFeatureBuilder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/tensorflow\/package$$TensorFlowFeatureBuilder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/tensorflow\/package$$TensorFlowFeatureBuilder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/tensorflow\/package$$TensorFlowFeatureBuilder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/tensorflow\/package$$TensorFlowFeatureBuilder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/tensorflow\/package$$TensorFlowFeatureBuilder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/tensorflow\/package$$TensorFlowFeatureBuilder.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/tensorflow\/package$$TensorFlowFeatureBuilder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/tensorflow\/package$$TensorFlowFeatureBuilder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/tensorflow\/package$$TensorFlowFeatureBuilder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/tensorflow\/package$$TensorFlowFeatureBuilder.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/tensorflow\/package$$TensorFlowFeatureBuilder.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/tensorflow\/package$$TensorFlowFeatureBuilder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/tensorflow\/package$$TensorFlowFeatureBuilder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/tensorflow\/package$$TensorFlowFeatureBuilder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/spotify\/featran\/tensorflow\/package$$TensorFlowFeatureBuilder.html", "kind" : "case class"}], "ml.dmlc.xgboost4j" : [{"name" : "ml.dmlc.xgboost4j.LabeledPoint", "shortDescription" : "Labeled training data point.", "members_case class" : [{"member" : "ml.dmlc.xgboost4j.LabeledPoint#<init>", "error" : "unsupported entity"}, {"member" : "ml.dmlc.xgboost4j.LabeledPoint#<init>", "error" : "unsupported entity"}, {"label" : "baseMargin", "tail" : ": Float", "member" : "ml.dmlc.xgboost4j.LabeledPoint.baseMargin", "link" : "ml\/dmlc\/xgboost4j\/LabeledPoint.html#baseMargin:Float", "kind" : "val"}, {"label" : "group", "tail" : ": Int", "member" : "ml.dmlc.xgboost4j.LabeledPoint.group", "link" : "ml\/dmlc\/xgboost4j\/LabeledPoint.html#group:Int", "kind" : "val"}, {"label" : "weight", "tail" : ": Float", "member" : "ml.dmlc.xgboost4j.LabeledPoint.weight", "link" : "ml\/dmlc\/xgboost4j\/LabeledPoint.html#weight:Float", "kind" : "val"}, {"label" : "values", "tail" : ": Array[Float]", "member" : "ml.dmlc.xgboost4j.LabeledPoint.values", "link" : "ml\/dmlc\/xgboost4j\/LabeledPoint.html#values:Array[Float]", "kind" : "val"}, {"label" : "indices", "tail" : ": Array[Int]", "member" : "ml.dmlc.xgboost4j.LabeledPoint.indices", "link" : "ml\/dmlc\/xgboost4j\/LabeledPoint.html#indices:Array[Int]", "kind" : "val"}, {"label" : "size", "tail" : ": Int", "member" : "ml.dmlc.xgboost4j.LabeledPoint.size", "link" : "ml\/dmlc\/xgboost4j\/LabeledPoint.html#size:Int", "kind" : "val"}, {"label" : "label", "tail" : ": Float", "member" : "ml.dmlc.xgboost4j.LabeledPoint.label", "link" : "ml\/dmlc\/xgboost4j\/LabeledPoint.html#label:Float", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/dmlc\/xgboost4j\/LabeledPoint.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/dmlc\/xgboost4j\/LabeledPoint.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/dmlc\/xgboost4j\/LabeledPoint.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/dmlc\/xgboost4j\/LabeledPoint.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/dmlc\/xgboost4j\/LabeledPoint.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/dmlc\/xgboost4j\/LabeledPoint.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/dmlc\/xgboost4j\/LabeledPoint.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/dmlc\/xgboost4j\/LabeledPoint.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/dmlc\/xgboost4j\/LabeledPoint.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/dmlc\/xgboost4j\/LabeledPoint.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/dmlc\/xgboost4j\/LabeledPoint.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/dmlc\/xgboost4j\/LabeledPoint.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/dmlc\/xgboost4j\/LabeledPoint.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/dmlc\/xgboost4j\/LabeledPoint.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/dmlc\/xgboost4j\/LabeledPoint.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/dmlc\/xgboost4j\/LabeledPoint.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ml\/dmlc\/xgboost4j\/LabeledPoint.html", "kind" : "case class"}], "com.spotify" : [], "com.spotify.featran.transformers" : [{"name" : "com.spotify.featran.transformers.Binarizer", "shortDescription" : "Transform numerical features to binary features.", "object" : "com\/spotify\/featran\/transformers\/Binarizer$.html", "members_object" : [{"label" : "fromSettings", "tail" : "(setting: Settings): Transformer[Double, Unit, Unit]", "member" : "com.spotify.featran.transformers.Binarizer.fromSettings", "link" : "com\/spotify\/featran\/transformers\/Binarizer$.html#fromSettings(setting:com.spotify.featran.transformers.Settings):com.spotify.featran.transformers.Transformer[Double,Unit,Unit]", "kind" : "def"}, {"label" : "apply", "tail" : "(name: String, threshold: Double): Transformer[Double, Unit, Unit]", "member" : "com.spotify.featran.transformers.Binarizer.apply", "link" : "com\/spotify\/featran\/transformers\/Binarizer$.html#apply(name:String,threshold:Double):com.spotify.featran.transformers.Transformer[Double,Unit,Unit]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/transformers\/Binarizer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/transformers\/Binarizer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/transformers\/Binarizer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/transformers\/Binarizer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/transformers\/Binarizer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/transformers\/Binarizer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/transformers\/Binarizer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/Binarizer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/Binarizer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/Binarizer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/transformers\/Binarizer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/transformers\/Binarizer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/featran\/transformers\/Binarizer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/transformers\/Binarizer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/featran\/transformers\/Binarizer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/featran\/transformers\/Binarizer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/transformers\/Binarizer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/transformers\/Binarizer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/transformers\/Binarizer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.spotify.featran.transformers.Bucketizer", "shortDescription" : "Transform a column of continuous features to n columns of feature buckets.", "object" : "com\/spotify\/featran\/transformers\/Bucketizer$.html", "members_object" : [{"label" : "fromSettings", "tail" : "(setting: Settings): Transformer[Double, Unit, Unit]", "member" : "com.spotify.featran.transformers.Bucketizer.fromSettings", "link" : "com\/spotify\/featran\/transformers\/Bucketizer$.html#fromSettings(setting:com.spotify.featran.transformers.Settings):com.spotify.featran.transformers.Transformer[Double,Unit,Unit]", "kind" : "def"}, {"label" : "apply", "tail" : "(name: String, splits: Array[Double]): Transformer[Double, Unit, Unit]", "member" : "com.spotify.featran.transformers.Bucketizer.apply", "link" : "com\/spotify\/featran\/transformers\/Bucketizer$.html#apply(name:String,splits:Array[Double]):com.spotify.featran.transformers.Transformer[Double,Unit,Unit]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/transformers\/Bucketizer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/transformers\/Bucketizer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/transformers\/Bucketizer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/transformers\/Bucketizer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/transformers\/Bucketizer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/transformers\/Bucketizer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/transformers\/Bucketizer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/Bucketizer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/Bucketizer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/Bucketizer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/transformers\/Bucketizer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/transformers\/Bucketizer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/featran\/transformers\/Bucketizer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/transformers\/Bucketizer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/featran\/transformers\/Bucketizer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/featran\/transformers\/Bucketizer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/transformers\/Bucketizer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/transformers\/Bucketizer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/transformers\/Bucketizer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.spotify.featran.transformers.HashNHotEncoder", "shortDescription" : "Transform a collection of categorical features to binary columns, with at most N one-values.", "object" : "com\/spotify\/featran\/transformers\/HashNHotEncoder$.html", "members_object" : [{"label" : "fromSettings", "tail" : "(setting: Settings): Transformer[Seq[String], HLL, Int]", "member" : "com.spotify.featran.transformers.HashNHotEncoder.fromSettings", "link" : "com\/spotify\/featran\/transformers\/HashNHotEncoder$.html#fromSettings(setting:com.spotify.featran.transformers.Settings):com.spotify.featran.transformers.Transformer[Seq[String],com.twitter.algebird.HLL,Int]", "kind" : "def"}, {"label" : "apply", "tail" : "(name: String, hashBucketSize: Int, sizeScalingFactor: Double): Transformer[Seq[String], HLL, Int]", "member" : "com.spotify.featran.transformers.HashNHotEncoder.apply", "link" : "com\/spotify\/featran\/transformers\/HashNHotEncoder$.html#apply(name:String,hashBucketSize:Int,sizeScalingFactor:Double):com.spotify.featran.transformers.Transformer[Seq[String],com.twitter.algebird.HLL,Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/transformers\/HashNHotEncoder$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/transformers\/HashNHotEncoder$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/transformers\/HashNHotEncoder$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/transformers\/HashNHotEncoder$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/transformers\/HashNHotEncoder$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/transformers\/HashNHotEncoder$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/transformers\/HashNHotEncoder$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/HashNHotEncoder$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/HashNHotEncoder$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/HashNHotEncoder$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/transformers\/HashNHotEncoder$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/transformers\/HashNHotEncoder$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/featran\/transformers\/HashNHotEncoder$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/transformers\/HashNHotEncoder$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/featran\/transformers\/HashNHotEncoder$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/featran\/transformers\/HashNHotEncoder$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/transformers\/HashNHotEncoder$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/transformers\/HashNHotEncoder$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/transformers\/HashNHotEncoder$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.spotify.featran.transformers.HashNHotWeightedEncoder", "shortDescription" : "Transform a collection of weighted categorical features to columns of weight sums, with at most Nvalues.", "object" : "com\/spotify\/featran\/transformers\/HashNHotWeightedEncoder$.html", "members_object" : [{"label" : "fromSettings", "tail" : "(setting: Settings): Transformer[Seq[WeightedLabel], HLL, Int]", "member" : "com.spotify.featran.transformers.HashNHotWeightedEncoder.fromSettings", "link" : "com\/spotify\/featran\/transformers\/HashNHotWeightedEncoder$.html#fromSettings(setting:com.spotify.featran.transformers.Settings):com.spotify.featran.transformers.Transformer[Seq[com.spotify.featran.transformers.WeightedLabel],com.twitter.algebird.HLL,Int]", "kind" : "def"}, {"label" : "apply", "tail" : "(name: String, hashBucketSize: Int, sizeScalingFactor: Double): Transformer[Seq[WeightedLabel], HLL, Int]", "member" : "com.spotify.featran.transformers.HashNHotWeightedEncoder.apply", "link" : "com\/spotify\/featran\/transformers\/HashNHotWeightedEncoder$.html#apply(name:String,hashBucketSize:Int,sizeScalingFactor:Double):com.spotify.featran.transformers.Transformer[Seq[com.spotify.featran.transformers.WeightedLabel],com.twitter.algebird.HLL,Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/transformers\/HashNHotWeightedEncoder$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/transformers\/HashNHotWeightedEncoder$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/transformers\/HashNHotWeightedEncoder$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/transformers\/HashNHotWeightedEncoder$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/transformers\/HashNHotWeightedEncoder$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/transformers\/HashNHotWeightedEncoder$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/transformers\/HashNHotWeightedEncoder$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/HashNHotWeightedEncoder$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/HashNHotWeightedEncoder$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/HashNHotWeightedEncoder$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/transformers\/HashNHotWeightedEncoder$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/transformers\/HashNHotWeightedEncoder$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/featran\/transformers\/HashNHotWeightedEncoder$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/transformers\/HashNHotWeightedEncoder$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/featran\/transformers\/HashNHotWeightedEncoder$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/featran\/transformers\/HashNHotWeightedEncoder$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/transformers\/HashNHotWeightedEncoder$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/transformers\/HashNHotWeightedEncoder$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/transformers\/HashNHotWeightedEncoder$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.spotify.featran.transformers.HashOneHotEncoder", "shortDescription" : "Transform a collection of categorical features to binary columns, with at most a singleone-value.", "object" : "com\/spotify\/featran\/transformers\/HashOneHotEncoder$.html", "members_object" : [{"label" : "fromSettings", "tail" : "(setting: Settings): Transformer[String, HLL, Int]", "member" : "com.spotify.featran.transformers.HashOneHotEncoder.fromSettings", "link" : "com\/spotify\/featran\/transformers\/HashOneHotEncoder$.html#fromSettings(setting:com.spotify.featran.transformers.Settings):com.spotify.featran.transformers.Transformer[String,com.twitter.algebird.HLL,Int]", "kind" : "def"}, {"label" : "apply", "tail" : "(name: String, hashBucketSize: Int, sizeScalingFactor: Double): Transformer[String, HLL, Int]", "member" : "com.spotify.featran.transformers.HashOneHotEncoder.apply", "link" : "com\/spotify\/featran\/transformers\/HashOneHotEncoder$.html#apply(name:String,hashBucketSize:Int,sizeScalingFactor:Double):com.spotify.featran.transformers.Transformer[String,com.twitter.algebird.HLL,Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/transformers\/HashOneHotEncoder$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/transformers\/HashOneHotEncoder$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/transformers\/HashOneHotEncoder$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/transformers\/HashOneHotEncoder$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/transformers\/HashOneHotEncoder$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/transformers\/HashOneHotEncoder$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/transformers\/HashOneHotEncoder$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/HashOneHotEncoder$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/HashOneHotEncoder$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/HashOneHotEncoder$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/transformers\/HashOneHotEncoder$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/transformers\/HashOneHotEncoder$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/featran\/transformers\/HashOneHotEncoder$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/transformers\/HashOneHotEncoder$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/featran\/transformers\/HashOneHotEncoder$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/featran\/transformers\/HashOneHotEncoder$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/transformers\/HashOneHotEncoder$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/transformers\/HashOneHotEncoder$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/transformers\/HashOneHotEncoder$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.spotify.featran.transformers.HeavyHitters", "shortDescription" : "Transform a collection of categorical features to 2 columns, one for rank and one for count.", "object" : "com\/spotify\/featran\/transformers\/HeavyHitters$.html", "members_object" : [{"label" : "fromSettings", "tail" : "(setting: Settings): Transformer[String, SketchMap[String, Long], Map[String, (Int, Long)]]", "member" : "com.spotify.featran.transformers.HeavyHitters.fromSettings", "link" : "com\/spotify\/featran\/transformers\/HeavyHitters$.html#fromSettings(setting:com.spotify.featran.transformers.Settings):com.spotify.featran.transformers.Transformer[String,com.twitter.algebird.SketchMap[String,Long],Map[String,(Int,Long)]]", "kind" : "def"}, {"label" : "apply", "tail" : "(name: String, heavyHittersCount: Int, eps: Double, delta: Double, seed: Int): Transformer[String, SketchMap[String, Long], Map[String, (Int, Long)]]", "member" : "com.spotify.featran.transformers.HeavyHitters.apply", "link" : "com\/spotify\/featran\/transformers\/HeavyHitters$.html#apply(name:String,heavyHittersCount:Int,eps:Double,delta:Double,seed:Int):com.spotify.featran.transformers.Transformer[String,com.twitter.algebird.SketchMap[String,Long],Map[String,(Int,Long)]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/transformers\/HeavyHitters$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/transformers\/HeavyHitters$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/transformers\/HeavyHitters$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/transformers\/HeavyHitters$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/transformers\/HeavyHitters$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/transformers\/HeavyHitters$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/transformers\/HeavyHitters$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/HeavyHitters$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/HeavyHitters$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/HeavyHitters$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/transformers\/HeavyHitters$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/transformers\/HeavyHitters$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/featran\/transformers\/HeavyHitters$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/transformers\/HeavyHitters$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/featran\/transformers\/HeavyHitters$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/featran\/transformers\/HeavyHitters$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/transformers\/HeavyHitters$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/transformers\/HeavyHitters$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/transformers\/HeavyHitters$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.spotify.featran.transformers.Identity", "shortDescription" : "Transform features by passing them through.", "object" : "com\/spotify\/featran\/transformers\/Identity$.html", "members_object" : [{"label" : "fromSettings", "tail" : "(setting: Settings): Transformer[Double, Unit, Unit]", "member" : "com.spotify.featran.transformers.Identity.fromSettings", "link" : "com\/spotify\/featran\/transformers\/Identity$.html#fromSettings(setting:com.spotify.featran.transformers.Settings):com.spotify.featran.transformers.Transformer[Double,Unit,Unit]", "kind" : "def"}, {"label" : "apply", "tail" : "(name: String): Transformer[Double, Unit, Unit]", "member" : "com.spotify.featran.transformers.Identity.apply", "link" : "com\/spotify\/featran\/transformers\/Identity$.html#apply(name:String):com.spotify.featran.transformers.Transformer[Double,Unit,Unit]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/transformers\/Identity$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/transformers\/Identity$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/transformers\/Identity$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/transformers\/Identity$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/transformers\/Identity$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/transformers\/Identity$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/transformers\/Identity$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/Identity$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/Identity$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/Identity$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/transformers\/Identity$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/transformers\/Identity$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/featran\/transformers\/Identity$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/transformers\/Identity$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/featran\/transformers\/Identity$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/featran\/transformers\/Identity$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/transformers\/Identity$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/transformers\/Identity$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/transformers\/Identity$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.spotify.featran.transformers.Indicator", "shortDescription" : "Transform an optional 1D feature to an indicator variable indicating presence.", "object" : "com\/spotify\/featran\/transformers\/Indicator$.html", "members_object" : [{"label" : "fromSettings", "tail" : "(setting: Settings): Transformer[Double, Unit, Unit]", "member" : "com.spotify.featran.transformers.Indicator.fromSettings", "link" : "com\/spotify\/featran\/transformers\/Indicator$.html#fromSettings(setting:com.spotify.featran.transformers.Settings):com.spotify.featran.transformers.Transformer[Double,Unit,Unit]", "kind" : "def"}, {"label" : "apply", "tail" : "(name: String): Transformer[Double, Unit, Unit]", "member" : "com.spotify.featran.transformers.Indicator.apply", "link" : "com\/spotify\/featran\/transformers\/Indicator$.html#apply(name:String):com.spotify.featran.transformers.Transformer[Double,Unit,Unit]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/transformers\/Indicator$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/transformers\/Indicator$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/transformers\/Indicator$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/transformers\/Indicator$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/transformers\/Indicator$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/transformers\/Indicator$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/transformers\/Indicator$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/Indicator$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/Indicator$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/Indicator$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/transformers\/Indicator$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/transformers\/Indicator$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/featran\/transformers\/Indicator$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/transformers\/Indicator$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/featran\/transformers\/Indicator$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/featran\/transformers\/Indicator$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/transformers\/Indicator$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/transformers\/Indicator$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/transformers\/Indicator$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.spotify.featran.transformers.IQROutlierRejector", "shortDescription" : "Reject values if they fall outside of either factor * IQR below the first quartile or factor *IQR above the third quartile.", "object" : "com\/spotify\/featran\/transformers\/IQROutlierRejector$.html", "members_object" : [{"label" : "fromSettings", "tail" : "(setting: Settings): Transformer[Double, B, C]", "member" : "com.spotify.featran.transformers.IQROutlierRejector.fromSettings", "link" : "com\/spotify\/featran\/transformers\/IQROutlierRejector$.html#fromSettings(setting:com.spotify.featran.transformers.Settings):com.spotify.featran.transformers.Transformer[Double,com.spotify.featran.transformers.BaseQuantileRejector.B,com.spotify.featran.transformers.BaseQuantileRejector.C]", "kind" : "def"}, {"label" : "apply", "tail" : "(name: String, rejectLower: Boolean, rejectUpper: Boolean, k: Int, factor: Double): Transformer[Double, B, C]", "member" : "com.spotify.featran.transformers.IQROutlierRejector.apply", "link" : "com\/spotify\/featran\/transformers\/IQROutlierRejector$.html#apply(name:String,rejectLower:Boolean,rejectUpper:Boolean,k:Int,factor:Double):com.spotify.featran.transformers.Transformer[Double,com.spotify.featran.transformers.BaseQuantileRejector.B,com.spotify.featran.transformers.BaseQuantileRejector.C]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/transformers\/IQROutlierRejector$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/transformers\/IQROutlierRejector$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/transformers\/IQROutlierRejector$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/transformers\/IQROutlierRejector$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/transformers\/IQROutlierRejector$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/transformers\/IQROutlierRejector$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/transformers\/IQROutlierRejector$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/IQROutlierRejector$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/IQROutlierRejector$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/IQROutlierRejector$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/transformers\/IQROutlierRejector$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/transformers\/IQROutlierRejector$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/featran\/transformers\/IQROutlierRejector$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/transformers\/IQROutlierRejector$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/featran\/transformers\/IQROutlierRejector$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/featran\/transformers\/IQROutlierRejector$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/transformers\/IQROutlierRejector$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/transformers\/IQROutlierRejector$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/transformers\/IQROutlierRejector$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.spotify.featran.transformers.MaxAbsScaler", "shortDescription" : "Transform features by rescaling each feature to range [-1, 1] by dividing through the maximumabsolute value in each feature.", "object" : "com\/spotify\/featran\/transformers\/MaxAbsScaler$.html", "members_object" : [{"label" : "fromSettings", "tail" : "(setting: Settings): Transformer[Double, Max[Double], Double]", "member" : "com.spotify.featran.transformers.MaxAbsScaler.fromSettings", "link" : "com\/spotify\/featran\/transformers\/MaxAbsScaler$.html#fromSettings(setting:com.spotify.featran.transformers.Settings):com.spotify.featran.transformers.Transformer[Double,com.twitter.algebird.Max[Double],Double]", "kind" : "def"}, {"label" : "apply", "tail" : "(name: String): Transformer[Double, Max[Double], Double]", "member" : "com.spotify.featran.transformers.MaxAbsScaler.apply", "link" : "com\/spotify\/featran\/transformers\/MaxAbsScaler$.html#apply(name:String):com.spotify.featran.transformers.Transformer[Double,com.twitter.algebird.Max[Double],Double]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/transformers\/MaxAbsScaler$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/transformers\/MaxAbsScaler$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/transformers\/MaxAbsScaler$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/transformers\/MaxAbsScaler$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/transformers\/MaxAbsScaler$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/transformers\/MaxAbsScaler$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/transformers\/MaxAbsScaler$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/MaxAbsScaler$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/MaxAbsScaler$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/MaxAbsScaler$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/transformers\/MaxAbsScaler$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/transformers\/MaxAbsScaler$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/featran\/transformers\/MaxAbsScaler$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/transformers\/MaxAbsScaler$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/featran\/transformers\/MaxAbsScaler$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/featran\/transformers\/MaxAbsScaler$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/transformers\/MaxAbsScaler$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/transformers\/MaxAbsScaler$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/transformers\/MaxAbsScaler$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.spotify.featran.transformers.MDL", "shortDescription" : "Transform a column of continuous labelled features to n columns of binned categorical features.", "object" : "com\/spotify\/featran\/transformers\/MDL$.html", "members_object" : [{"label" : "fromSettings", "tail" : "(setting: Settings): Transformer[MDLRecord[String], B[String], C]", "member" : "com.spotify.featran.transformers.MDL.fromSettings", "link" : "com\/spotify\/featran\/transformers\/MDL$.html#fromSettings(setting:com.spotify.featran.transformers.Settings):com.spotify.featran.transformers.Transformer[com.spotify.featran.transformers.MDLRecord[String],com.spotify.featran.transformers.MDL.B[String],com.spotify.featran.transformers.MDL.C]", "kind" : "def"}, {"label" : "apply", "tail" : "(name: String, sampleRate: Double, stoppingCriterion: Double, minBinPercentage: Double, maxBins: Int, seed: Int)(arg0: ClassTag[T]): Transformer[MDLRecord[T], B[T], C]", "member" : "com.spotify.featran.transformers.MDL.apply", "link" : "com\/spotify\/featran\/transformers\/MDL$.html#apply[T](name:String,sampleRate:Double,stoppingCriterion:Double,minBinPercentage:Double,maxBins:Int,seed:Int)(implicitevidence$1:scala.reflect.ClassTag[T]):com.spotify.featran.transformers.Transformer[com.spotify.featran.transformers.MDLRecord[T],com.spotify.featran.transformers.MDL.B[T],com.spotify.featran.transformers.MDL.C]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/transformers\/MDL$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/transformers\/MDL$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/transformers\/MDL$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/transformers\/MDL$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/transformers\/MDL$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/transformers\/MDL$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/transformers\/MDL$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/MDL$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/MDL$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/MDL$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/transformers\/MDL$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/transformers\/MDL$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/featran\/transformers\/MDL$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/transformers\/MDL$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/featran\/transformers\/MDL$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/featran\/transformers\/MDL$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/transformers\/MDL$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/transformers\/MDL$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/transformers\/MDL$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.spotify.featran.transformers.MDLRecord", "shortDescription" : "Labelled feature for MDL.", "members_case class" : [{"member" : "com.spotify.featran.transformers.MDLRecord#<init>", "error" : "unsupported entity"}, {"label" : "value", "tail" : ": Double", "member" : "com.spotify.featran.transformers.MDLRecord.value", "link" : "com\/spotify\/featran\/transformers\/MDLRecord.html#value:Double", "kind" : "val"}, {"label" : "label", "tail" : ": T", "member" : "com.spotify.featran.transformers.MDLRecord.label", "link" : "com\/spotify\/featran\/transformers\/MDLRecord.html#label:T", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/transformers\/MDLRecord.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/transformers\/MDLRecord.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/transformers\/MDLRecord.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/transformers\/MDLRecord.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/transformers\/MDLRecord.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/transformers\/MDLRecord.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/transformers\/MDLRecord.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/MDLRecord.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/MDLRecord.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/MDLRecord.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/transformers\/MDLRecord.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/transformers\/MDLRecord.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/transformers\/MDLRecord.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/transformers\/MDLRecord.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/transformers\/MDLRecord.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/transformers\/MDLRecord.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/spotify\/featran\/transformers\/MDLRecord.html", "kind" : "case class"}, {"name" : "com.spotify.featran.transformers.MinMaxScaler", "shortDescription" : "Transform features by rescaling each feature to a specific range [min, max] (default [0, 1]).", "object" : "com\/spotify\/featran\/transformers\/MinMaxScaler$.html", "members_object" : [{"label" : "fromSettings", "tail" : "(setting: Settings): Transformer[Double, (Min[Double], Max[Double]), C]", "member" : "com.spotify.featran.transformers.MinMaxScaler.fromSettings", "link" : "com\/spotify\/featran\/transformers\/MinMaxScaler$.html#fromSettings(setting:com.spotify.featran.transformers.Settings):com.spotify.featran.transformers.Transformer[Double,(com.twitter.algebird.Min[Double],com.twitter.algebird.Max[Double]),com.spotify.featran.transformers.MinMaxScaler.C]", "kind" : "def"}, {"label" : "apply", "tail" : "(name: String, min: Double, max: Double): Transformer[Double, (Min[Double], Max[Double]), C]", "member" : "com.spotify.featran.transformers.MinMaxScaler.apply", "link" : "com\/spotify\/featran\/transformers\/MinMaxScaler$.html#apply(name:String,min:Double,max:Double):com.spotify.featran.transformers.Transformer[Double,(com.twitter.algebird.Min[Double],com.twitter.algebird.Max[Double]),com.spotify.featran.transformers.MinMaxScaler.C]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/transformers\/MinMaxScaler$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/transformers\/MinMaxScaler$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/transformers\/MinMaxScaler$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/transformers\/MinMaxScaler$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/transformers\/MinMaxScaler$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/transformers\/MinMaxScaler$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/transformers\/MinMaxScaler$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/MinMaxScaler$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/MinMaxScaler$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/MinMaxScaler$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/transformers\/MinMaxScaler$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/transformers\/MinMaxScaler$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/featran\/transformers\/MinMaxScaler$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/transformers\/MinMaxScaler$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/featran\/transformers\/MinMaxScaler$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/featran\/transformers\/MinMaxScaler$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/transformers\/MinMaxScaler$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/transformers\/MinMaxScaler$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/transformers\/MinMaxScaler$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.spotify.featran.transformers.NGrams", "shortDescription" : "Transform a collection of sentences, where each row is a Seq[String] of the words \/ tokens,into a collection containing all the n-grams that can be constructed from each row.", "object" : "com\/spotify\/featran\/transformers\/NGrams$.html", "members_object" : [{"label" : "fromSettings", "tail" : "(setting: Settings): Transformer[Seq[String], Set[String], SortedMap[String, Int]]", "member" : "com.spotify.featran.transformers.NGrams.fromSettings", "link" : "com\/spotify\/featran\/transformers\/NGrams$.html#fromSettings(setting:com.spotify.featran.transformers.Settings):com.spotify.featran.transformers.Transformer[Seq[String],Set[String],scala.collection.SortedMap[String,Int]]", "kind" : "def"}, {"label" : "apply", "tail" : "(name: String, low: Int, high: Int, sep: String): Transformer[Seq[String], Set[String], SortedMap[String, Int]]", "member" : "com.spotify.featran.transformers.NGrams.apply", "link" : "com\/spotify\/featran\/transformers\/NGrams$.html#apply(name:String,low:Int,high:Int,sep:String):com.spotify.featran.transformers.Transformer[Seq[String],Set[String],scala.collection.SortedMap[String,Int]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/transformers\/NGrams$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/transformers\/NGrams$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/transformers\/NGrams$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/transformers\/NGrams$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/transformers\/NGrams$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/transformers\/NGrams$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/transformers\/NGrams$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/NGrams$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/NGrams$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/NGrams$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/transformers\/NGrams$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/transformers\/NGrams$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/featran\/transformers\/NGrams$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/transformers\/NGrams$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/featran\/transformers\/NGrams$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/featran\/transformers\/NGrams$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/transformers\/NGrams$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/transformers\/NGrams$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/transformers\/NGrams$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.spotify.featran.transformers.NHotEncoder", "shortDescription" : "Transform a collection of categorical features to binary columns, with at most N one-values.", "object" : "com\/spotify\/featran\/transformers\/NHotEncoder$.html", "members_object" : [{"label" : "fromSettings", "tail" : "(setting: Settings): Transformer[Seq[String], Set[String], SortedMap[String, Int]]", "member" : "com.spotify.featran.transformers.NHotEncoder.fromSettings", "link" : "com\/spotify\/featran\/transformers\/NHotEncoder$.html#fromSettings(setting:com.spotify.featran.transformers.Settings):com.spotify.featran.transformers.Transformer[Seq[String],Set[String],scala.collection.SortedMap[String,Int]]", "kind" : "def"}, {"label" : "apply", "tail" : "(name: String, encodeMissingValue: Boolean): Transformer[Seq[String], Set[String], SortedMap[String, Int]]", "member" : "com.spotify.featran.transformers.NHotEncoder.apply", "link" : "com\/spotify\/featran\/transformers\/NHotEncoder$.html#apply(name:String,encodeMissingValue:Boolean):com.spotify.featran.transformers.Transformer[Seq[String],Set[String],scala.collection.SortedMap[String,Int]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/transformers\/NHotEncoder$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/transformers\/NHotEncoder$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/transformers\/NHotEncoder$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/transformers\/NHotEncoder$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/transformers\/NHotEncoder$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/transformers\/NHotEncoder$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/transformers\/NHotEncoder$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/NHotEncoder$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/NHotEncoder$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/NHotEncoder$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/transformers\/NHotEncoder$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/transformers\/NHotEncoder$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/featran\/transformers\/NHotEncoder$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/transformers\/NHotEncoder$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/featran\/transformers\/NHotEncoder$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/featran\/transformers\/NHotEncoder$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/transformers\/NHotEncoder$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/transformers\/NHotEncoder$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/transformers\/NHotEncoder$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.spotify.featran.transformers.NHotWeightedEncoder", "shortDescription" : "Transform a collection of weighted categorical features to columns of weight sums, with at most Nvalues.", "object" : "com\/spotify\/featran\/transformers\/NHotWeightedEncoder$.html", "members_object" : [{"label" : "fromSettings", "tail" : "(setting: Settings): Transformer[Seq[WeightedLabel], Set[String], SortedMap[String, Int]]", "member" : "com.spotify.featran.transformers.NHotWeightedEncoder.fromSettings", "link" : "com\/spotify\/featran\/transformers\/NHotWeightedEncoder$.html#fromSettings(setting:com.spotify.featran.transformers.Settings):com.spotify.featran.transformers.Transformer[Seq[com.spotify.featran.transformers.WeightedLabel],Set[String],scala.collection.SortedMap[String,Int]]", "kind" : "def"}, {"label" : "apply", "tail" : "(name: String, encodeMissingValue: Boolean): Transformer[Seq[WeightedLabel], Set[String], SortedMap[String, Int]]", "member" : "com.spotify.featran.transformers.NHotWeightedEncoder.apply", "link" : "com\/spotify\/featran\/transformers\/NHotWeightedEncoder$.html#apply(name:String,encodeMissingValue:Boolean):com.spotify.featran.transformers.Transformer[Seq[com.spotify.featran.transformers.WeightedLabel],Set[String],scala.collection.SortedMap[String,Int]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/transformers\/NHotWeightedEncoder$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/transformers\/NHotWeightedEncoder$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/transformers\/NHotWeightedEncoder$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/transformers\/NHotWeightedEncoder$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/transformers\/NHotWeightedEncoder$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/transformers\/NHotWeightedEncoder$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/transformers\/NHotWeightedEncoder$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/NHotWeightedEncoder$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/NHotWeightedEncoder$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/NHotWeightedEncoder$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/transformers\/NHotWeightedEncoder$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/transformers\/NHotWeightedEncoder$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/featran\/transformers\/NHotWeightedEncoder$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/transformers\/NHotWeightedEncoder$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/featran\/transformers\/NHotWeightedEncoder$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/featran\/transformers\/NHotWeightedEncoder$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/transformers\/NHotWeightedEncoder$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/transformers\/NHotWeightedEncoder$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/transformers\/NHotWeightedEncoder$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.spotify.featran.transformers.Normalizer", "shortDescription" : "Transform vector features by normalizing each vector to have unit norm.", "object" : "com\/spotify\/featran\/transformers\/Normalizer$.html", "members_object" : [{"label" : "fromSettings", "tail" : "(setting: Settings): Transformer[Array[Double], Int, Int]", "member" : "com.spotify.featran.transformers.Normalizer.fromSettings", "link" : "com\/spotify\/featran\/transformers\/Normalizer$.html#fromSettings(setting:com.spotify.featran.transformers.Settings):com.spotify.featran.transformers.Transformer[Array[Double],Int,Int]", "kind" : "def"}, {"label" : "apply", "tail" : "(name: String, p: Double, expectedLength: Int): Transformer[Array[Double], Int, Int]", "member" : "com.spotify.featran.transformers.Normalizer.apply", "link" : "com\/spotify\/featran\/transformers\/Normalizer$.html#apply(name:String,p:Double,expectedLength:Int):com.spotify.featran.transformers.Transformer[Array[Double],Int,Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/transformers\/Normalizer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/transformers\/Normalizer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/transformers\/Normalizer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/transformers\/Normalizer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/transformers\/Normalizer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/transformers\/Normalizer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/transformers\/Normalizer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/Normalizer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/Normalizer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/Normalizer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/transformers\/Normalizer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/transformers\/Normalizer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/featran\/transformers\/Normalizer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/transformers\/Normalizer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/featran\/transformers\/Normalizer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/featran\/transformers\/Normalizer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/transformers\/Normalizer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/transformers\/Normalizer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/transformers\/Normalizer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.spotify.featran.transformers.OneHotEncoder", "shortDescription" : "Transform a collection of categorical features to binary columns, with at most a singleone-value.", "object" : "com\/spotify\/featran\/transformers\/OneHotEncoder$.html", "members_object" : [{"label" : "fromSettings", "tail" : "(setting: Settings): Transformer[String, Set[String], SortedMap[String, Int]]", "member" : "com.spotify.featran.transformers.OneHotEncoder.fromSettings", "link" : "com\/spotify\/featran\/transformers\/OneHotEncoder$.html#fromSettings(setting:com.spotify.featran.transformers.Settings):com.spotify.featran.transformers.Transformer[String,Set[String],scala.collection.SortedMap[String,Int]]", "kind" : "def"}, {"label" : "apply", "tail" : "(name: String, encodeMissingValue: Boolean): Transformer[String, Set[String], SortedMap[String, Int]]", "member" : "com.spotify.featran.transformers.OneHotEncoder.apply", "link" : "com\/spotify\/featran\/transformers\/OneHotEncoder$.html#apply(name:String,encodeMissingValue:Boolean):com.spotify.featran.transformers.Transformer[String,Set[String],scala.collection.SortedMap[String,Int]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/transformers\/OneHotEncoder$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/transformers\/OneHotEncoder$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/transformers\/OneHotEncoder$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/transformers\/OneHotEncoder$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/transformers\/OneHotEncoder$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/transformers\/OneHotEncoder$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/transformers\/OneHotEncoder$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/OneHotEncoder$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/OneHotEncoder$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/OneHotEncoder$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/transformers\/OneHotEncoder$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/transformers\/OneHotEncoder$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/featran\/transformers\/OneHotEncoder$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/transformers\/OneHotEncoder$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/featran\/transformers\/OneHotEncoder$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/featran\/transformers\/OneHotEncoder$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/transformers\/OneHotEncoder$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/transformers\/OneHotEncoder$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/transformers\/OneHotEncoder$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.spotify.featran.transformers.PolynomialExpansion", "shortDescription" : "Transform vector features by expanding them into a polynomial space, which is formulated by ann-degree combination of original dimensions.", "object" : "com\/spotify\/featran\/transformers\/PolynomialExpansion$.html", "members_object" : [{"label" : "expand", "tail" : "(v: Array[Double], degree: Int): Array[Double]", "member" : "com.spotify.featran.transformers.PolynomialExpansion.expand", "link" : "com\/spotify\/featran\/transformers\/PolynomialExpansion$.html#expand(v:Array[Double],degree:Int):Array[Double]", "kind" : "def"}, {"label" : "fromSettings", "tail" : "(setting: Settings): Transformer[Array[Double], Int, Int]", "member" : "com.spotify.featran.transformers.PolynomialExpansion.fromSettings", "link" : "com\/spotify\/featran\/transformers\/PolynomialExpansion$.html#fromSettings(setting:com.spotify.featran.transformers.Settings):com.spotify.featran.transformers.Transformer[Array[Double],Int,Int]", "kind" : "def"}, {"label" : "apply", "tail" : "(name: String, degree: Int, expectedLength: Int): Transformer[Array[Double], Int, Int]", "member" : "com.spotify.featran.transformers.PolynomialExpansion.apply", "link" : "com\/spotify\/featran\/transformers\/PolynomialExpansion$.html#apply(name:String,degree:Int,expectedLength:Int):com.spotify.featran.transformers.Transformer[Array[Double],Int,Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/transformers\/PolynomialExpansion$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/transformers\/PolynomialExpansion$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/transformers\/PolynomialExpansion$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/transformers\/PolynomialExpansion$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/transformers\/PolynomialExpansion$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/transformers\/PolynomialExpansion$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/transformers\/PolynomialExpansion$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/PolynomialExpansion$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/PolynomialExpansion$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/PolynomialExpansion$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/transformers\/PolynomialExpansion$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/transformers\/PolynomialExpansion$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/featran\/transformers\/PolynomialExpansion$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/transformers\/PolynomialExpansion$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/featran\/transformers\/PolynomialExpansion$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/featran\/transformers\/PolynomialExpansion$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/transformers\/PolynomialExpansion$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/transformers\/PolynomialExpansion$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/transformers\/PolynomialExpansion$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.spotify.featran.transformers.PositionEncoder", "shortDescription" : "Transform a collection of categorical features to a single value that is the position of thatfeature within the complete set of categories.", "object" : "com\/spotify\/featran\/transformers\/PositionEncoder$.html", "members_object" : [{"label" : "fromSettings", "tail" : "(setting: Settings): Transformer[String, Set[String], SortedMap[String, Int]]", "member" : "com.spotify.featran.transformers.PositionEncoder.fromSettings", "link" : "com\/spotify\/featran\/transformers\/PositionEncoder$.html#fromSettings(setting:com.spotify.featran.transformers.Settings):com.spotify.featran.transformers.Transformer[String,Set[String],scala.collection.SortedMap[String,Int]]", "kind" : "def"}, {"label" : "apply", "tail" : "(name: String): Transformer[String, Set[String], SortedMap[String, Int]]", "member" : "com.spotify.featran.transformers.PositionEncoder.apply", "link" : "com\/spotify\/featran\/transformers\/PositionEncoder$.html#apply(name:String):com.spotify.featran.transformers.Transformer[String,Set[String],scala.collection.SortedMap[String,Int]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/transformers\/PositionEncoder$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/transformers\/PositionEncoder$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/transformers\/PositionEncoder$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/transformers\/PositionEncoder$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/transformers\/PositionEncoder$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/transformers\/PositionEncoder$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/transformers\/PositionEncoder$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/PositionEncoder$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/PositionEncoder$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/PositionEncoder$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/transformers\/PositionEncoder$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/transformers\/PositionEncoder$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/featran\/transformers\/PositionEncoder$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/transformers\/PositionEncoder$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/featran\/transformers\/PositionEncoder$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/featran\/transformers\/PositionEncoder$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/transformers\/PositionEncoder$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/transformers\/PositionEncoder$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/transformers\/PositionEncoder$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.spotify.featran.transformers.QuantileDiscretizer", "shortDescription" : "Transform a column of continuous features to n columns of binned categorical features.", "object" : "com\/spotify\/featran\/transformers\/QuantileDiscretizer$.html", "members_object" : [{"label" : "fromSettings", "tail" : "(setting: Settings): Transformer[Double, B, C]", "member" : "com.spotify.featran.transformers.QuantileDiscretizer.fromSettings", "link" : "com\/spotify\/featran\/transformers\/QuantileDiscretizer$.html#fromSettings(setting:com.spotify.featran.transformers.Settings):com.spotify.featran.transformers.Transformer[Double,com.spotify.featran.transformers.QuantileDiscretizer.B,com.spotify.featran.transformers.QuantileDiscretizer.C]", "kind" : "def"}, {"label" : "apply", "tail" : "(name: String, numBuckets: Int, k: Int): Transformer[Double, B, C]", "member" : "com.spotify.featran.transformers.QuantileDiscretizer.apply", "link" : "com\/spotify\/featran\/transformers\/QuantileDiscretizer$.html#apply(name:String,numBuckets:Int,k:Int):com.spotify.featran.transformers.Transformer[Double,com.spotify.featran.transformers.QuantileDiscretizer.B,com.spotify.featran.transformers.QuantileDiscretizer.C]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/transformers\/QuantileDiscretizer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/transformers\/QuantileDiscretizer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/transformers\/QuantileDiscretizer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/transformers\/QuantileDiscretizer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/transformers\/QuantileDiscretizer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/transformers\/QuantileDiscretizer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/transformers\/QuantileDiscretizer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/QuantileDiscretizer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/QuantileDiscretizer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/QuantileDiscretizer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/transformers\/QuantileDiscretizer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/transformers\/QuantileDiscretizer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/featran\/transformers\/QuantileDiscretizer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/transformers\/QuantileDiscretizer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/featran\/transformers\/QuantileDiscretizer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/featran\/transformers\/QuantileDiscretizer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/transformers\/QuantileDiscretizer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/transformers\/QuantileDiscretizer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/transformers\/QuantileDiscretizer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.spotify.featran.transformers.QuantileOutlierRejector", "shortDescription" : "Reject values in the first and\/or last quantiles defined by the number of buckets in thenumBuckets parameter.", "object" : "com\/spotify\/featran\/transformers\/QuantileOutlierRejector$.html", "members_object" : [{"label" : "fromSettings", "tail" : "(setting: Settings): Transformer[Double, B, C]", "member" : "com.spotify.featran.transformers.QuantileOutlierRejector.fromSettings", "link" : "com\/spotify\/featran\/transformers\/QuantileOutlierRejector$.html#fromSettings(setting:com.spotify.featran.transformers.Settings):com.spotify.featran.transformers.Transformer[Double,com.spotify.featran.transformers.BaseQuantileRejector.B,com.spotify.featran.transformers.BaseQuantileRejector.C]", "kind" : "def"}, {"label" : "apply", "tail" : "(name: String, rejectLower: Boolean, rejectUpper: Boolean, numBuckets: Int, k: Int): Transformer[Double, B, C]", "member" : "com.spotify.featran.transformers.QuantileOutlierRejector.apply", "link" : "com\/spotify\/featran\/transformers\/QuantileOutlierRejector$.html#apply(name:String,rejectLower:Boolean,rejectUpper:Boolean,numBuckets:Int,k:Int):com.spotify.featran.transformers.Transformer[Double,com.spotify.featran.transformers.BaseQuantileRejector.B,com.spotify.featran.transformers.BaseQuantileRejector.C]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/transformers\/QuantileOutlierRejector$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/transformers\/QuantileOutlierRejector$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/transformers\/QuantileOutlierRejector$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/transformers\/QuantileOutlierRejector$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/transformers\/QuantileOutlierRejector$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/transformers\/QuantileOutlierRejector$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/transformers\/QuantileOutlierRejector$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/QuantileOutlierRejector$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/QuantileOutlierRejector$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/QuantileOutlierRejector$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/transformers\/QuantileOutlierRejector$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/transformers\/QuantileOutlierRejector$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/featran\/transformers\/QuantileOutlierRejector$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/transformers\/QuantileOutlierRejector$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/featran\/transformers\/QuantileOutlierRejector$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/featran\/transformers\/QuantileOutlierRejector$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/transformers\/QuantileOutlierRejector$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/transformers\/QuantileOutlierRejector$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/transformers\/QuantileOutlierRejector$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.spotify.featran.transformers.Settings", "shortDescription" : "", "members_case class" : [{"member" : "com.spotify.featran.transformers.Settings#<init>", "error" : "unsupported entity"}, {"label" : "aggregators", "tail" : ": Option[String]", "member" : "com.spotify.featran.transformers.Settings.aggregators", "link" : "com\/spotify\/featran\/transformers\/Settings.html#aggregators:Option[String]", "kind" : "val"}, {"label" : "featureNames", "tail" : ": Seq[String]", "member" : "com.spotify.featran.transformers.Settings.featureNames", "link" : "com\/spotify\/featran\/transformers\/Settings.html#featureNames:Seq[String]", "kind" : "val"}, {"label" : "params", "tail" : ": Map[String, String]", "member" : "com.spotify.featran.transformers.Settings.params", "link" : "com\/spotify\/featran\/transformers\/Settings.html#params:Map[String,String]", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "com.spotify.featran.transformers.Settings.name", "link" : "com\/spotify\/featran\/transformers\/Settings.html#name:String", "kind" : "val"}, {"label" : "cls", "tail" : ": String", "member" : "com.spotify.featran.transformers.Settings.cls", "link" : "com\/spotify\/featran\/transformers\/Settings.html#cls:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/transformers\/Settings.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/transformers\/Settings.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/transformers\/Settings.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/transformers\/Settings.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/transformers\/Settings.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/transformers\/Settings.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/transformers\/Settings.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/Settings.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/Settings.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/Settings.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/transformers\/Settings.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/transformers\/Settings.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/transformers\/Settings.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/transformers\/Settings.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/transformers\/Settings.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/transformers\/Settings.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/spotify\/featran\/transformers\/Settings.html", "kind" : "case class"}, {"name" : "com.spotify.featran.transformers.SettingsBuilder", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/transformers\/SettingsBuilder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/transformers\/SettingsBuilder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/transformers\/SettingsBuilder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/transformers\/SettingsBuilder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/transformers\/SettingsBuilder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/transformers\/SettingsBuilder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/transformers\/SettingsBuilder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/SettingsBuilder.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/SettingsBuilder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/SettingsBuilder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/transformers\/SettingsBuilder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/transformers\/SettingsBuilder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/featran\/transformers\/SettingsBuilder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/transformers\/SettingsBuilder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/featran\/transformers\/SettingsBuilder.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/featran\/transformers\/SettingsBuilder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/transformers\/SettingsBuilder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/transformers\/SettingsBuilder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/transformers\/SettingsBuilder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "fromSettings", "tail" : "(settings: Settings): Transformer[_, _, _]", "member" : "com.spotify.featran.transformers.SettingsBuilder.fromSettings", "link" : "com\/spotify\/featran\/transformers\/SettingsBuilder.html#fromSettings(settings:com.spotify.featran.transformers.Settings):com.spotify.featran.transformers.Transformer[_,_,_]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "com\/spotify\/featran\/transformers\/SettingsBuilder.html", "kind" : "trait"}, {"name" : "com.spotify.featran.transformers.StandardScaler", "shortDescription" : "Transform features by normalizing each feature to have unit standard deviation and\/or zero mean.", "object" : "com\/spotify\/featran\/transformers\/StandardScaler$.html", "members_object" : [{"label" : "fromSettings", "tail" : "(setting: Settings): Transformer[Double, Moments, (Double, Double)]", "member" : "com.spotify.featran.transformers.StandardScaler.fromSettings", "link" : "com\/spotify\/featran\/transformers\/StandardScaler$.html#fromSettings(setting:com.spotify.featran.transformers.Settings):com.spotify.featran.transformers.Transformer[Double,com.twitter.algebird.Moments,(Double,Double)]", "kind" : "def"}, {"label" : "apply", "tail" : "(name: String, withStd: Boolean, withMean: Boolean): Transformer[Double, Moments, (Double, Double)]", "member" : "com.spotify.featran.transformers.StandardScaler.apply", "link" : "com\/spotify\/featran\/transformers\/StandardScaler$.html#apply(name:String,withStd:Boolean,withMean:Boolean):com.spotify.featran.transformers.Transformer[Double,com.twitter.algebird.Moments,(Double,Double)]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/transformers\/StandardScaler$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/transformers\/StandardScaler$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/transformers\/StandardScaler$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/transformers\/StandardScaler$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/transformers\/StandardScaler$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/transformers\/StandardScaler$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/transformers\/StandardScaler$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/StandardScaler$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/StandardScaler$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/StandardScaler$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/transformers\/StandardScaler$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/transformers\/StandardScaler$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/featran\/transformers\/StandardScaler$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/transformers\/StandardScaler$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/featran\/transformers\/StandardScaler$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/featran\/transformers\/StandardScaler$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/transformers\/StandardScaler$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/transformers\/StandardScaler$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/transformers\/StandardScaler$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.spotify.featran.transformers.TopNOneHotEncoder", "shortDescription" : "Transform a collection of categorical features to binary columns, with at most a singleone-value.", "object" : "com\/spotify\/featran\/transformers\/TopNOneHotEncoder$.html", "members_object" : [{"label" : "fromSettings", "tail" : "(setting: Settings): Transformer[String, SketchMap[String, Long], SortedMap[String, Int]]", "member" : "com.spotify.featran.transformers.TopNOneHotEncoder.fromSettings", "link" : "com\/spotify\/featran\/transformers\/TopNOneHotEncoder$.html#fromSettings(setting:com.spotify.featran.transformers.Settings):com.spotify.featran.transformers.Transformer[String,com.twitter.algebird.SketchMap[String,Long],scala.collection.SortedMap[String,Int]]", "kind" : "def"}, {"label" : "apply", "tail" : "(name: String, n: Int, eps: Double, delta: Double, seed: Int, encodeMissingValue: Boolean): Transformer[String, SketchMap[String, Long], SortedMap[String, Int]]", "member" : "com.spotify.featran.transformers.TopNOneHotEncoder.apply", "link" : "com\/spotify\/featran\/transformers\/TopNOneHotEncoder$.html#apply(name:String,n:Int,eps:Double,delta:Double,seed:Int,encodeMissingValue:Boolean):com.spotify.featran.transformers.Transformer[String,com.twitter.algebird.SketchMap[String,Long],scala.collection.SortedMap[String,Int]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/transformers\/TopNOneHotEncoder$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/transformers\/TopNOneHotEncoder$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/transformers\/TopNOneHotEncoder$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/transformers\/TopNOneHotEncoder$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/transformers\/TopNOneHotEncoder$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/transformers\/TopNOneHotEncoder$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/transformers\/TopNOneHotEncoder$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/TopNOneHotEncoder$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/TopNOneHotEncoder$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/TopNOneHotEncoder$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/transformers\/TopNOneHotEncoder$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/transformers\/TopNOneHotEncoder$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/featran\/transformers\/TopNOneHotEncoder$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/transformers\/TopNOneHotEncoder$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/featran\/transformers\/TopNOneHotEncoder$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/featran\/transformers\/TopNOneHotEncoder$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/transformers\/TopNOneHotEncoder$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/transformers\/TopNOneHotEncoder$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/transformers\/TopNOneHotEncoder$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.spotify.featran.transformers.Transformer", "shortDescription" : "Base class for feature transformers.", "members_class" : [{"label" : "settings", "tail" : "(c: Option[C]): Settings", "member" : "com.spotify.featran.transformers.Transformer.settings", "link" : "com\/spotify\/featran\/transformers\/Transformer.html#settings(c:Option[C]):com.spotify.featran.transformers.Settings", "kind" : "def"}, {"label" : "params", "tail" : "(): Map[String, String]", "member" : "com.spotify.featran.transformers.Transformer.params", "link" : "com\/spotify\/featran\/transformers\/Transformer.html#params:Map[String,String]", "kind" : "def"}, {"label" : "unsafeFlatWriter", "tail" : "(fw: FlatWriter[T]): (Option[Any]) ⇒ IF", "member" : "com.spotify.featran.transformers.Transformer.unsafeFlatWriter", "link" : "com\/spotify\/featran\/transformers\/Transformer.html#unsafeFlatWriter[T](implicitfw:com.spotify.featran.FlatWriter[T]):Option[Any]=>fw.IF", "kind" : "def"}, {"label" : "unsafeFeatureDimension", "tail" : "(c: Option[Any]): Int", "member" : "com.spotify.featran.transformers.Transformer.unsafeFeatureDimension", "link" : "com\/spotify\/featran\/transformers\/Transformer.html#unsafeFeatureDimension(c:Option[Any]):Int", "kind" : "def"}, {"label" : "unsafeBuildFeatures", "tail" : "(a: Option[Any], c: Option[Any], fb: FeatureBuilder[_]): Unit", "member" : "com.spotify.featran.transformers.Transformer.unsafeBuildFeatures", "link" : "com\/spotify\/featran\/transformers\/Transformer.html#unsafeBuildFeatures(a:Option[Any],c:Option[Any],fb:com.spotify.featran.FeatureBuilder[_]):Unit", "kind" : "def"}, {"label" : "optBuildFeatures", "tail" : "(a: Option[A], c: Option[C], fb: FeatureBuilder[_]): Unit", "member" : "com.spotify.featran.transformers.Transformer.optBuildFeatures", "link" : "com\/spotify\/featran\/transformers\/Transformer.html#optBuildFeatures(a:Option[A],c:Option[C],fb:com.spotify.featran.FeatureBuilder[_]):Unit", "kind" : "def"}, {"label" : "optFeatureNames", "tail" : "(c: Option[C]): Seq[String]", "member" : "com.spotify.featran.transformers.Transformer.optFeatureNames", "link" : "com\/spotify\/featran\/transformers\/Transformer.html#optFeatureNames(c:Option[C]):Seq[String]", "kind" : "def"}, {"label" : "optFeatureDimension", "tail" : "(c: Option[C]): Int", "member" : "com.spotify.featran.transformers.Transformer.optFeatureDimension", "link" : "com\/spotify\/featran\/transformers\/Transformer.html#optFeatureDimension(c:Option[C]):Int", "kind" : "def"}, {"label" : "contramap", "tail" : "(f: (AA) ⇒ A): Transformer[AA, B, C]", "member" : "com.spotify.featran.transformers.Transformer.contramap", "link" : "com\/spotify\/featran\/transformers\/Transformer.html#contramap[AA](f:AA=>A):com.spotify.featran.transformers.Transformer[AA,B,C]", "kind" : "def"}, {"label" : "names", "tail" : "(n: Int): Stream[String]", "member" : "com.spotify.featran.transformers.Transformer.names", "link" : "com\/spotify\/featran\/transformers\/Transformer.html#names(n:Int):Stream[String]", "kind" : "def"}, {"label" : "nameAt", "tail" : "(n: Int): String", "member" : "com.spotify.featran.transformers.Transformer.nameAt", "link" : "com\/spotify\/featran\/transformers\/Transformer.html#nameAt(n:Int):String", "kind" : "def"}, {"label" : "checkRange", "tail" : "(name: String, value: Double, lower: Double, upper: Double): Unit", "member" : "com.spotify.featran.transformers.Transformer.checkRange", "link" : "com\/spotify\/featran\/transformers\/Transformer.html#checkRange(name:String,value:Double,lower:Double,upper:Double):Unit", "kind" : "def"}, {"member" : "com.spotify.featran.transformers.Transformer#<init>", "error" : "unsupported entity"}, {"label" : "name", "tail" : ": String", "member" : "com.spotify.featran.transformers.Transformer.name", "link" : "com\/spotify\/featran\/transformers\/Transformer.html#name:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/transformers\/Transformer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/transformers\/Transformer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/transformers\/Transformer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/transformers\/Transformer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/transformers\/Transformer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/transformers\/Transformer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/transformers\/Transformer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/Transformer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/Transformer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/Transformer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/transformers\/Transformer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/transformers\/Transformer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/featran\/transformers\/Transformer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/transformers\/Transformer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/featran\/transformers\/Transformer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/featran\/transformers\/Transformer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/transformers\/Transformer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/transformers\/Transformer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/transformers\/Transformer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "decodeAggregator", "tail" : "(s: String): C", "member" : "com.spotify.featran.transformers.Transformer.decodeAggregator", "link" : "com\/spotify\/featran\/transformers\/Transformer.html#decodeAggregator(s:String):C", "kind" : "abstract def"}, {"label" : "encodeAggregator", "tail" : "(c: C): String", "member" : "com.spotify.featran.transformers.Transformer.encodeAggregator", "link" : "com\/spotify\/featran\/transformers\/Transformer.html#encodeAggregator(c:C):String", "kind" : "abstract def"}, {"label" : "flatWriter", "tail" : "(fw: FlatWriter[T]): (Option[A]) ⇒ IF", "member" : "com.spotify.featran.transformers.Transformer.flatWriter", "link" : "com\/spotify\/featran\/transformers\/Transformer.html#flatWriter[T](implicitfw:com.spotify.featran.FlatWriter[T]):Option[A]=>fw.IF", "kind" : "abstract def"}, {"label" : "flatRead", "tail" : "(arg0: FlatReader[T]): (T) ⇒ Option[Any]", "member" : "com.spotify.featran.transformers.Transformer.flatRead", "link" : "com\/spotify\/featran\/transformers\/Transformer.html#flatRead[T](implicitevidence$2:com.spotify.featran.FlatReader[T]):T=>Option[Any]", "kind" : "abstract def"}, {"label" : "buildFeatures", "tail" : "(a: Option[A], c: C, fb: FeatureBuilder[_]): Unit", "member" : "com.spotify.featran.transformers.Transformer.buildFeatures", "link" : "com\/spotify\/featran\/transformers\/Transformer.html#buildFeatures(a:Option[A],c:C,fb:com.spotify.featran.FeatureBuilder[_]):Unit", "kind" : "abstract def"}, {"label" : "featureNames", "tail" : "(c: C): Seq[String]", "member" : "com.spotify.featran.transformers.Transformer.featureNames", "link" : "com\/spotify\/featran\/transformers\/Transformer.html#featureNames(c:C):Seq[String]", "kind" : "abstract def"}, {"label" : "featureDimension", "tail" : "(c: C): Int", "member" : "com.spotify.featran.transformers.Transformer.featureDimension", "link" : "com\/spotify\/featran\/transformers\/Transformer.html#featureDimension(c:C):Int", "kind" : "abstract def"}, {"label" : "aggregator", "tail" : ": Aggregator[A, B, C]", "member" : "com.spotify.featran.transformers.Transformer.aggregator", "link" : "com\/spotify\/featran\/transformers\/Transformer.html#aggregator:com.twitter.algebird.Aggregator[A,B,C]", "kind" : "abstract val"}], "class" : "com\/spotify\/featran\/transformers\/Transformer.html", "kind" : "class"}, {"name" : "com.spotify.featran.transformers.VectorIdentity", "shortDescription" : "Takes fixed length vectors by passing them through.", "object" : "com\/spotify\/featran\/transformers\/VectorIdentity$.html", "members_object" : [{"label" : "fromSettings", "tail" : "(setting: Settings): Transformer[Seq[Double], Int, Int]", "member" : "com.spotify.featran.transformers.VectorIdentity.fromSettings", "link" : "com\/spotify\/featran\/transformers\/VectorIdentity$.html#fromSettings(setting:com.spotify.featran.transformers.Settings):com.spotify.featran.transformers.Transformer[Seq[Double],Int,Int]", "kind" : "def"}, {"label" : "apply", "tail" : "(name: String, expectedLength: Int)(ev: (M[Double]) ⇒ Seq[Double]): Transformer[M[Double], Int, Int]", "member" : "com.spotify.featran.transformers.VectorIdentity.apply", "link" : "com\/spotify\/featran\/transformers\/VectorIdentity$.html#apply[M[_]](name:String,expectedLength:Int)(implicitev:M[Double]=>Seq[Double]):com.spotify.featran.transformers.Transformer[M[Double],Int,Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/transformers\/VectorIdentity$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/transformers\/VectorIdentity$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/transformers\/VectorIdentity$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/transformers\/VectorIdentity$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/transformers\/VectorIdentity$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/transformers\/VectorIdentity$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/transformers\/VectorIdentity$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/VectorIdentity$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/VectorIdentity$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/VectorIdentity$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/transformers\/VectorIdentity$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/transformers\/VectorIdentity$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/featran\/transformers\/VectorIdentity$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/transformers\/VectorIdentity$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/featran\/transformers\/VectorIdentity$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/featran\/transformers\/VectorIdentity$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/transformers\/VectorIdentity$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/transformers\/VectorIdentity$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/transformers\/VectorIdentity$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.spotify.featran.transformers.VonMisesEvaluator", "shortDescription" : "Transform a column of continuous features that represent the mean of a von Mises distribution ton columns of continuous features.", "object" : "com\/spotify\/featran\/transformers\/VonMisesEvaluator$.html", "members_object" : [{"label" : "getProbability", "tail" : "(x: Double, mu: Double, kappa: Double, scale: Double): Double", "member" : "com.spotify.featran.transformers.VonMisesEvaluator.getProbability", "link" : "com\/spotify\/featran\/transformers\/VonMisesEvaluator$.html#getProbability(x:Double,mu:Double,kappa:Double,scale:Double):Double", "kind" : "def"}, {"label" : "fromSettings", "tail" : "(setting: Settings): Transformer[Double, Unit, Unit]", "member" : "com.spotify.featran.transformers.VonMisesEvaluator.fromSettings", "link" : "com\/spotify\/featran\/transformers\/VonMisesEvaluator$.html#fromSettings(setting:com.spotify.featran.transformers.Settings):com.spotify.featran.transformers.Transformer[Double,Unit,Unit]", "kind" : "def"}, {"label" : "apply", "tail" : "(name: String, kappa: Double, scale: Double, points: Array[Double]): Transformer[Double, Unit, Unit]", "member" : "com.spotify.featran.transformers.VonMisesEvaluator.apply", "link" : "com\/spotify\/featran\/transformers\/VonMisesEvaluator$.html#apply(name:String,kappa:Double,scale:Double,points:Array[Double]):com.spotify.featran.transformers.Transformer[Double,Unit,Unit]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/transformers\/VonMisesEvaluator$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/transformers\/VonMisesEvaluator$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/transformers\/VonMisesEvaluator$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/transformers\/VonMisesEvaluator$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/transformers\/VonMisesEvaluator$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/transformers\/VonMisesEvaluator$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/transformers\/VonMisesEvaluator$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/VonMisesEvaluator$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/VonMisesEvaluator$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/VonMisesEvaluator$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/transformers\/VonMisesEvaluator$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/transformers\/VonMisesEvaluator$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/featran\/transformers\/VonMisesEvaluator$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/transformers\/VonMisesEvaluator$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/featran\/transformers\/VonMisesEvaluator$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/featran\/transformers\/VonMisesEvaluator$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/transformers\/VonMisesEvaluator$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/transformers\/VonMisesEvaluator$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/transformers\/VonMisesEvaluator$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.spotify.featran.transformers.WeightedLabel", "shortDescription" : "Weighted label.", "members_case class" : [{"member" : "com.spotify.featran.transformers.WeightedLabel#<init>", "error" : "unsupported entity"}, {"label" : "value", "tail" : ": Double", "member" : "com.spotify.featran.transformers.WeightedLabel.value", "link" : "com\/spotify\/featran\/transformers\/WeightedLabel.html#value:Double", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "com.spotify.featran.transformers.WeightedLabel.name", "link" : "com\/spotify\/featran\/transformers\/WeightedLabel.html#name:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/transformers\/WeightedLabel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/transformers\/WeightedLabel.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/transformers\/WeightedLabel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/transformers\/WeightedLabel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/transformers\/WeightedLabel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/transformers\/WeightedLabel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/transformers\/WeightedLabel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/WeightedLabel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/WeightedLabel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/transformers\/WeightedLabel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/transformers\/WeightedLabel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/transformers\/WeightedLabel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/transformers\/WeightedLabel.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/transformers\/WeightedLabel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/transformers\/WeightedLabel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/transformers\/WeightedLabel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/spotify\/featran\/transformers\/WeightedLabel.html", "kind" : "case class"}], "ml" : [], "ml.dmlc" : [], "com.spotify.featran" : [{"name" : "com.spotify.featran.CanBuild", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/CanBuild.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/CanBuild.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/CanBuild.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/CanBuild.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/CanBuild.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/CanBuild.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/CanBuild.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/CanBuild.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/CanBuild.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/CanBuild.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/CanBuild.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/CanBuild.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/featran\/CanBuild.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/CanBuild.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/featran\/CanBuild.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/featran\/CanBuild.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/CanBuild.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/CanBuild.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/CanBuild.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(): Builder[T, M[T]]", "member" : "com.spotify.featran.CanBuild.apply", "link" : "com\/spotify\/featran\/CanBuild.html#apply():scala.collection.mutable.Builder[T,M[T]]", "kind" : "abstract def"}], "shortDescription" : "", "object" : "com\/spotify\/featran\/CanBuild$.html", "members_object" : [{"label" : "arrayCB", "tail" : "(arg0: ClassTag[T]): CanBuild[T, Array]", "member" : "com.spotify.featran.CanBuild.arrayCB", "link" : "com\/spotify\/featran\/CanBuild$.html#arrayCB[T](implicitevidence$1:scala.reflect.ClassTag[T]):com.spotify.featran.CanBuild[T,Array]", "kind" : "implicit def"}, {"label" : "doubleArrayCB", "tail" : "(): CanBuild[Double, Array]", "member" : "com.spotify.featran.CanBuild.doubleArrayCB", "link" : "com\/spotify\/featran\/CanBuild$.html#doubleArrayCB:com.spotify.featran.CanBuild[Double,Array]", "kind" : "implicit def"}, {"label" : "floatArrayCB", "tail" : "(): CanBuild[Float, Array]", "member" : "com.spotify.featran.CanBuild.floatArrayCB", "link" : "com\/spotify\/featran\/CanBuild$.html#floatArrayCB:com.spotify.featran.CanBuild[Float,Array]", "kind" : "implicit def"}, {"label" : "bufferCB", "tail" : "(): CanBuild[T, Buffer]", "member" : "com.spotify.featran.CanBuild.bufferCB", "link" : "com\/spotify\/featran\/CanBuild$.html#bufferCB[T]:com.spotify.featran.CanBuild[T,scala.collection.mutable.Buffer]", "kind" : "implicit def"}, {"label" : "vectorCB", "tail" : "(): CanBuild[T, Vector]", "member" : "com.spotify.featran.CanBuild.vectorCB", "link" : "com\/spotify\/featran\/CanBuild$.html#vectorCB[T]:com.spotify.featran.CanBuild[T,Vector]", "kind" : "implicit def"}, {"label" : "listCB", "tail" : "(): CanBuild[T, List]", "member" : "com.spotify.featran.CanBuild.listCB", "link" : "com\/spotify\/featran\/CanBuild$.html#listCB[T]:com.spotify.featran.CanBuild[T,List]", "kind" : "implicit def"}, {"label" : "indexedSeqCB", "tail" : "(): CanBuild[T, IndexedSeq]", "member" : "com.spotify.featran.CanBuild.indexedSeqCB", "link" : "com\/spotify\/featran\/CanBuild$.html#indexedSeqCB[T]:com.spotify.featran.CanBuild[T,IndexedSeq]", "kind" : "implicit def"}, {"label" : "seqCB", "tail" : "(): CanBuild[T, Seq]", "member" : "com.spotify.featran.CanBuild.seqCB", "link" : "com\/spotify\/featran\/CanBuild$.html#seqCB[T]:com.spotify.featran.CanBuild[T,Seq]", "kind" : "implicit def"}, {"label" : "iterableCB", "tail" : "(): CanBuild[T, Iterable]", "member" : "com.spotify.featran.CanBuild.iterableCB", "link" : "com\/spotify\/featran\/CanBuild$.html#iterableCB[T]:com.spotify.featran.CanBuild[T,Iterable]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/CanBuild$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/CanBuild$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/CanBuild$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/CanBuild$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/CanBuild$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/CanBuild$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/CanBuild$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/CanBuild$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/CanBuild$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/CanBuild$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/CanBuild$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/CanBuild$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/featran\/CanBuild$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/CanBuild$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/featran\/CanBuild$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/featran\/CanBuild$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/CanBuild$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/CanBuild$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/CanBuild$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/spotify\/featran\/CanBuild.html", "kind" : "trait"}, {"name" : "com.spotify.featran.CollectionType", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/CollectionType.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/CollectionType.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/CollectionType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/CollectionType.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/CollectionType.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/CollectionType.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/CollectionType.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/CollectionType.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/CollectionType.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/CollectionType.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/CollectionType.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/CollectionType.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/featran\/CollectionType.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/CollectionType.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/featran\/CollectionType.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/featran\/CollectionType.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/CollectionType.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/CollectionType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/CollectionType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "cross", "tail" : "(ma: M[A])(mb: M[B])(arg0: ClassTag[B]): M[(A, B)]", "member" : "com.spotify.featran.CollectionType.cross", "link" : "com\/spotify\/featran\/CollectionType.html#cross[A,B](ma:M[A])(mb:M[B])(implicitevidence$3:scala.reflect.ClassTag[B]):M[(A,B)]", "kind" : "abstract def"}, {"label" : "reduce", "tail" : "(ma: M[A])(f: (A, A) ⇒ A): M[A]", "member" : "com.spotify.featran.CollectionType.reduce", "link" : "com\/spotify\/featran\/CollectionType.html#reduce[A](ma:M[A])(f:(A,A)=>A):M[A]", "kind" : "abstract def"}, {"label" : "map", "tail" : "(ma: M[A])(f: (A) ⇒ B)(arg0: ClassTag[B]): M[B]", "member" : "com.spotify.featran.CollectionType.map", "link" : "com\/spotify\/featran\/CollectionType.html#map[A,B](ma:M[A])(f:A=>B)(implicitevidence$2:scala.reflect.ClassTag[B]):M[B]", "kind" : "abstract def"}, {"label" : "pure", "tail" : "(ma: M[A])(a: B)(arg0: ClassTag[B]): M[B]", "member" : "com.spotify.featran.CollectionType.pure", "link" : "com\/spotify\/featran\/CollectionType.html#pure[A,B](ma:M[A])(a:B)(implicitevidence$1:scala.reflect.ClassTag[B]):M[B]", "kind" : "abstract def"}], "shortDescription" : "Type class for collections to extract features from.", "object" : "com\/spotify\/featran\/CollectionType$.html", "members_object" : [{"label" : "nonInheritedOps", "tail" : "", "member" : "com.spotify.featran.CollectionType.nonInheritedOps", "link" : "com\/spotify\/featran\/CollectionType$.html#nonInheritedOps", "kind" : "object"}, {"label" : "ToCollectionTypeOps", "tail" : "", "member" : "com.spotify.featran.CollectionType.ToCollectionTypeOps", "link" : "com\/spotify\/featran\/CollectionType$.html#ToCollectionTypeOpsextendsSerializable", "kind" : "trait"}, {"label" : "AllOps", "tail" : "", "member" : "com.spotify.featran.CollectionType.AllOps", "link" : "com\/spotify\/featran\/CollectionType$.html#AllOps[M[_],A]extendsCollectionType.Ops[M,A]", "kind" : "trait"}, {"label" : "Ops", "tail" : "", "member" : "com.spotify.featran.CollectionType.Ops", "link" : "com\/spotify\/featran\/CollectionType$.html#Ops[M[_],A]extendsSerializable", "kind" : "trait"}, {"label" : "ops", "tail" : "", "member" : "com.spotify.featran.CollectionType.ops", "link" : "com\/spotify\/featran\/CollectionType$.html#ops", "kind" : "object"}, {"label" : "apply", "tail" : "(instance: CollectionType[M]): CollectionType[M]", "member" : "com.spotify.featran.CollectionType.apply", "link" : "com\/spotify\/featran\/CollectionType$.html#apply[M[_]](implicitinstance:com.spotify.featran.CollectionType[M]):com.spotify.featran.CollectionType[M]", "kind" : "def"}, {"label" : "arrayCollectionType", "tail" : ": CollectionType[Array]", "member" : "com.spotify.featran.CollectionType.arrayCollectionType", "link" : "com\/spotify\/featran\/CollectionType$.html#arrayCollectionType:com.spotify.featran.CollectionType[Array]", "kind" : "implicit val"}, {"label" : "scalaCollectionType", "tail" : "(cb: CanBuild[_, M], ti: (M[_]) ⇒ Iterable[_]): CollectionType[M]", "member" : "com.spotify.featran.CollectionType.scalaCollectionType", "link" : "com\/spotify\/featran\/CollectionType$.html#scalaCollectionType[M[_]](implicitcb:com.spotify.featran.CanBuild[_,M],implicitti:M[_]=>Iterable[_]):com.spotify.featran.CollectionType[M]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/CollectionType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/CollectionType$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/CollectionType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/CollectionType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/CollectionType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/CollectionType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/CollectionType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/CollectionType$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/CollectionType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/CollectionType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/CollectionType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/CollectionType$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/featran\/CollectionType$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/CollectionType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/featran\/CollectionType$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/featran\/CollectionType$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/CollectionType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/CollectionType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/CollectionType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/spotify\/featran\/CollectionType.html", "kind" : "trait"}, {"name" : "com.spotify.featran.CrossingFeatureBuilder", "shortDescription" : "", "object" : "com\/spotify\/featran\/CrossingFeatureBuilder$.html", "members_object" : [{"label" : "apply", "tail" : "(fb: FeatureBuilder[F], crossings: Crossings): FeatureBuilder[F]", "member" : "com.spotify.featran.CrossingFeatureBuilder.apply", "link" : "com\/spotify\/featran\/CrossingFeatureBuilder$.html#apply[F](fb:com.spotify.featran.FeatureBuilder[F],crossings:com.spotify.featran.Crossings):com.spotify.featran.FeatureBuilder[F]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/CrossingFeatureBuilder$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/CrossingFeatureBuilder$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/CrossingFeatureBuilder$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/CrossingFeatureBuilder$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/CrossingFeatureBuilder$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/CrossingFeatureBuilder$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/CrossingFeatureBuilder$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/CrossingFeatureBuilder$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/CrossingFeatureBuilder$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/CrossingFeatureBuilder$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/CrossingFeatureBuilder$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/CrossingFeatureBuilder$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/featran\/CrossingFeatureBuilder$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/CrossingFeatureBuilder$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/featran\/CrossingFeatureBuilder$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/featran\/CrossingFeatureBuilder$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/CrossingFeatureBuilder$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/CrossingFeatureBuilder$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/CrossingFeatureBuilder$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.spotify.featran.Feature", "shortDescription" : "", "members_class" : [{"label" : "unsafeSettings", "tail" : "(c: Option[Any]): Settings", "member" : "com.spotify.featran.Feature.unsafeSettings", "link" : "com\/spotify\/featran\/Feature.html#unsafeSettings(c:Option[Any]):com.spotify.featran.transformers.Settings", "kind" : "def"}, {"label" : "unsafeBuildFeatures", "tail" : "(a: Option[Any], c: Option[Any], fb: FeatureBuilder[_]): Unit", "member" : "com.spotify.featran.Feature.unsafeBuildFeatures", "link" : "com\/spotify\/featran\/Feature.html#unsafeBuildFeatures(a:Option[Any],c:Option[Any],fb:com.spotify.featran.FeatureBuilder[_]):Unit", "kind" : "def"}, {"label" : "unsafeFeatureNames", "tail" : "(c: Option[Any]): Seq[String]", "member" : "com.spotify.featran.Feature.unsafeFeatureNames", "link" : "com\/spotify\/featran\/Feature.html#unsafeFeatureNames(c:Option[Any]):Seq[String]", "kind" : "def"}, {"label" : "unsafeFeatureDimension", "tail" : "(c: Option[Any]): Int", "member" : "com.spotify.featran.Feature.unsafeFeatureDimension", "link" : "com\/spotify\/featran\/Feature.html#unsafeFeatureDimension(c:Option[Any]):Int", "kind" : "def"}, {"label" : "unsafePresent", "tail" : "(b: Option[Any]): Option[C]", "member" : "com.spotify.featran.Feature.unsafePresent", "link" : "com\/spotify\/featran\/Feature.html#unsafePresent(b:Option[Any]):Option[C]", "kind" : "def"}, {"label" : "unsafeSum", "tail" : "(x: Option[Any], y: Option[Any]): Option[Any]", "member" : "com.spotify.featran.Feature.unsafeSum", "link" : "com\/spotify\/featran\/Feature.html#unsafeSum(x:Option[Any],y:Option[Any]):Option[Any]", "kind" : "def"}, {"label" : "unsafePrepare", "tail" : "(a: Option[Any]): Option[B]", "member" : "com.spotify.featran.Feature.unsafePrepare", "link" : "com\/spotify\/featran\/Feature.html#unsafePrepare(a:Option[Any]):Option[B]", "kind" : "def"}, {"label" : "get", "tail" : "(t: T): Option[A]", "member" : "com.spotify.featran.Feature.get", "link" : "com\/spotify\/featran\/Feature.html#get(t:T):Option[A]", "kind" : "def"}, {"label" : "transformer", "tail" : ": Transformer[A, B, C]", "member" : "com.spotify.featran.Feature.transformer", "link" : "com\/spotify\/featran\/Feature.html#transformer:com.spotify.featran.transformers.Transformer[A,B,C]", "kind" : "val"}, {"label" : "default", "tail" : ": Option[A]", "member" : "com.spotify.featran.Feature.default", "link" : "com\/spotify\/featran\/Feature.html#default:Option[A]", "kind" : "val"}, {"label" : "f", "tail" : ": (T) ⇒ Option[A]", "member" : "com.spotify.featran.Feature.f", "link" : "com\/spotify\/featran\/Feature.html#f:T=>Option[A]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/Feature.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/Feature.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/Feature.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/Feature.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/Feature.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/Feature.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/Feature.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/Feature.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/Feature.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/Feature.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/Feature.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/Feature.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/featran\/Feature.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/Feature.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/featran\/Feature.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/featran\/Feature.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/Feature.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/Feature.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/Feature.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/spotify\/featran\/Feature.html", "kind" : "class"}, {"name" : "com.spotify.featran.FeatureBuilder", "members_trait" : [{"label" : "map", "tail" : "(f: (T) ⇒ U): FeatureBuilder[U]", "member" : "com.spotify.featran.FeatureBuilder.map", "link" : "com\/spotify\/featran\/FeatureBuilder.html#map[U](f:T=>U):com.spotify.featran.FeatureBuilder[U]", "kind" : "def"}, {"label" : "skip", "tail" : "(n: Int): Unit", "member" : "com.spotify.featran.FeatureBuilder.skip", "link" : "com\/spotify\/featran\/FeatureBuilder.html#skip(n:Int):Unit", "kind" : "def"}, {"label" : "add", "tail" : "(names: Iterable[String], values: M[Double])(ev: (M[Double]) ⇒ Seq[Double]): Unit", "member" : "com.spotify.featran.FeatureBuilder.add", "link" : "com\/spotify\/featran\/FeatureBuilder.html#add[M[_]](names:Iterable[String],values:M[Double])(implicitev:M[Double]=>Seq[Double]):Unit", "kind" : "def"}, {"label" : "prepare", "tail" : "(transformer: Transformer[_, _, _]): Unit", "member" : "com.spotify.featran.FeatureBuilder.prepare", "link" : "com\/spotify\/featran\/FeatureBuilder.html#prepare(transformer:com.spotify.featran.transformers.Transformer[_,_,_]):Unit", "kind" : "def"}, {"label" : "rejections", "tail" : "(): Map[String, FeatureRejection]", "member" : "com.spotify.featran.FeatureBuilder.rejections", "link" : "com\/spotify\/featran\/FeatureBuilder.html#rejections:Map[String,com.spotify.featran.FeatureRejection]", "kind" : "def"}, {"label" : "reject", "tail" : "(transformer: Transformer[_, _, _], reason: FeatureRejection): Unit", "member" : "com.spotify.featran.FeatureBuilder.reject", "link" : "com\/spotify\/featran\/FeatureBuilder.html#reject(transformer:com.spotify.featran.transformers.Transformer[_,_,_],reason:com.spotify.featran.FeatureRejection):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/FeatureBuilder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/FeatureBuilder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/FeatureBuilder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/FeatureBuilder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/FeatureBuilder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/FeatureBuilder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/FeatureBuilder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/FeatureBuilder.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/FeatureBuilder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/FeatureBuilder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/FeatureBuilder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/FeatureBuilder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/featran\/FeatureBuilder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/FeatureBuilder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/featran\/FeatureBuilder.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/featran\/FeatureBuilder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/FeatureBuilder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/FeatureBuilder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/FeatureBuilder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "newBuilder", "tail" : "(): FeatureBuilder[T]", "member" : "com.spotify.featran.FeatureBuilder.newBuilder", "link" : "com\/spotify\/featran\/FeatureBuilder.html#newBuilder:com.spotify.featran.FeatureBuilder[T]", "kind" : "abstract def"}, {"label" : "skip", "tail" : "(): Unit", "member" : "com.spotify.featran.FeatureBuilder.skip", "link" : "com\/spotify\/featran\/FeatureBuilder.html#skip():Unit", "kind" : "abstract def"}, {"label" : "add", "tail" : "(name: String, value: Double): Unit", "member" : "com.spotify.featran.FeatureBuilder.add", "link" : "com\/spotify\/featran\/FeatureBuilder.html#add(name:String,value:Double):Unit", "kind" : "abstract def"}, {"label" : "result", "tail" : "(): T", "member" : "com.spotify.featran.FeatureBuilder.result", "link" : "com\/spotify\/featran\/FeatureBuilder.html#result:T", "kind" : "abstract def"}, {"label" : "init", "tail" : "(dimension: Int): Unit", "member" : "com.spotify.featran.FeatureBuilder.init", "link" : "com\/spotify\/featran\/FeatureBuilder.html#init(dimension:Int):Unit", "kind" : "abstract def"}], "shortDescription" : "Type class for types to build feature into.", "object" : "com\/spotify\/featran\/FeatureBuilder$.html", "members_object" : [{"label" : "nonInheritedOps", "tail" : "", "member" : "com.spotify.featran.FeatureBuilder.nonInheritedOps", "link" : "com\/spotify\/featran\/FeatureBuilder$.html#nonInheritedOps", "kind" : "object"}, {"label" : "ToFeatureBuilderOps", "tail" : "", "member" : "com.spotify.featran.FeatureBuilder.ToFeatureBuilderOps", "link" : "com\/spotify\/featran\/FeatureBuilder$.html#ToFeatureBuilderOpsextendsSerializable", "kind" : "trait"}, {"label" : "AllOps", "tail" : "", "member" : "com.spotify.featran.FeatureBuilder.AllOps", "link" : "com\/spotify\/featran\/FeatureBuilder$.html#AllOps[T]extendsFeatureBuilder.Ops[T]", "kind" : "trait"}, {"label" : "Ops", "tail" : "", "member" : "com.spotify.featran.FeatureBuilder.Ops", "link" : "com\/spotify\/featran\/FeatureBuilder$.html#Ops[T]extendsSerializable", "kind" : "trait"}, {"label" : "ops", "tail" : "", "member" : "com.spotify.featran.FeatureBuilder.ops", "link" : "com\/spotify\/featran\/FeatureBuilder$.html#ops", "kind" : "object"}, {"label" : "apply", "tail" : "(instance: FeatureBuilder[T]): FeatureBuilder[T]", "member" : "com.spotify.featran.FeatureBuilder.apply", "link" : "com\/spotify\/featran\/FeatureBuilder$.html#apply[T](implicitinstance:com.spotify.featran.FeatureBuilder[T]):com.spotify.featran.FeatureBuilder[T]", "kind" : "def"}, {"label" : "mapFB", "tail" : "(arg0: ClassTag[T], arg1: FloatingPoint[T]): FeatureBuilder[Map[String, T]]", "member" : "com.spotify.featran.FeatureBuilder.mapFB", "link" : "com\/spotify\/featran\/FeatureBuilder$.html#mapFB[T](implicitevidence$19:scala.reflect.ClassTag[T],implicitevidence$20:com.spotify.featran.FloatingPoint[T]):com.spotify.featran.FeatureBuilder[Map[String,T]]", "kind" : "implicit def"}, {"label" : "sparseVectorFB", "tail" : "(arg0: ClassTag[T], arg1: FloatingPoint[T], arg2: Semiring[T], arg3: Zero[T]): FeatureBuilder[SparseVector[T]]", "member" : "com.spotify.featran.FeatureBuilder.sparseVectorFB", "link" : "com\/spotify\/featran\/FeatureBuilder$.html#sparseVectorFB[T](implicitevidence$13:scala.reflect.ClassTag[T],implicitevidence$14:com.spotify.featran.FloatingPoint[T],implicitevidence$15:breeze.math.Semiring[T],implicitevidence$16:breeze.storage.Zero[T]):com.spotify.featran.FeatureBuilder[breeze.linalg.SparseVector[T]]", "kind" : "implicit def"}, {"label" : "denseVectorFB", "tail" : "(arg0: ClassTag[T], arg1: FloatingPoint[T]): FeatureBuilder[DenseVector[T]]", "member" : "com.spotify.featran.FeatureBuilder.denseVectorFB", "link" : "com\/spotify\/featran\/FeatureBuilder$.html#denseVectorFB[T](implicitevidence$11:scala.reflect.ClassTag[T],implicitevidence$12:com.spotify.featran.FloatingPoint[T]):com.spotify.featran.FeatureBuilder[breeze.linalg.DenseVector[T]]", "kind" : "implicit def"}, {"label" : "namedSparseArrayFB", "tail" : "(arg0: ClassTag[T], arg1: FloatingPoint[T]): FeatureBuilder[NamedSparseArray[T]]", "member" : "com.spotify.featran.FeatureBuilder.namedSparseArrayFB", "link" : "com\/spotify\/featran\/FeatureBuilder$.html#namedSparseArrayFB[T](implicitevidence$9:scala.reflect.ClassTag[T],implicitevidence$10:com.spotify.featran.FloatingPoint[T]):com.spotify.featran.FeatureBuilder[com.spotify.featran.NamedSparseArray[T]]", "kind" : "implicit def"}, {"label" : "sparseArrayFB", "tail" : "(arg0: ClassTag[T], arg1: FloatingPoint[T]): FeatureBuilder[SparseArray[T]]", "member" : "com.spotify.featran.FeatureBuilder.sparseArrayFB", "link" : "com\/spotify\/featran\/FeatureBuilder$.html#sparseArrayFB[T](implicitevidence$7:scala.reflect.ClassTag[T],implicitevidence$8:com.spotify.featran.FloatingPoint[T]):com.spotify.featran.FeatureBuilder[com.spotify.featran.SparseArray[T]]", "kind" : "implicit def"}, {"label" : "iterableFB", "tail" : "(arg0: ClassTag[T], arg1: FloatingPoint[T], cb: CanBuild[T, M], ti: (M[T]) ⇒ Iterable[T]): FeatureBuilder[M[T]]", "member" : "com.spotify.featran.FeatureBuilder.iterableFB", "link" : "com\/spotify\/featran\/FeatureBuilder$.html#iterableFB[M[_],T](implicitevidence$3:scala.reflect.ClassTag[T],implicitevidence$4:com.spotify.featran.FloatingPoint[T],implicitcb:com.spotify.featran.CanBuild[T,M],implicitti:M[T]=>Iterable[T]):com.spotify.featran.FeatureBuilder[M[T]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/FeatureBuilder$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/FeatureBuilder$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/FeatureBuilder$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/FeatureBuilder$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/FeatureBuilder$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/FeatureBuilder$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/FeatureBuilder$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/FeatureBuilder$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/FeatureBuilder$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/FeatureBuilder$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/FeatureBuilder$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/FeatureBuilder$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/featran\/FeatureBuilder$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/FeatureBuilder$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/featran\/FeatureBuilder$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/featran\/FeatureBuilder$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/FeatureBuilder$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/FeatureBuilder$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/FeatureBuilder$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/spotify\/featran\/FeatureBuilder.html", "kind" : "trait"}, {"name" : "com.spotify.featran.FeatureExtractor", "shortDescription" : "Encapsulate features extracted from a FeatureSpec.", "members_class" : [{"label" : "featureResults", "tail" : "(arg0: FeatureBuilder[F], arg1: ClassTag[F]): M[FeatureResult[F, T]]", "member" : "com.spotify.featran.FeatureExtractor.featureResults", "link" : "com\/spotify\/featran\/FeatureExtractor.html#featureResults[F](implicitevidence$4:com.spotify.featran.FeatureBuilder[F],implicitevidence$5:scala.reflect.ClassTag[F]):M[com.spotify.featran.FeatureResult[F,T]]", "kind" : "def"}, {"label" : "featureValues", "tail" : "(arg0: FeatureBuilder[F], arg1: ClassTag[F]): M[F]", "member" : "com.spotify.featran.FeatureExtractor.featureValues", "link" : "com\/spotify\/featran\/FeatureExtractor.html#featureValues[F](implicitevidence$2:com.spotify.featran.FeatureBuilder[F],implicitevidence$3:scala.reflect.ClassTag[F]):M[F]", "kind" : "def"}, {"label" : "featureNames", "tail" : ": M[Seq[String]]", "member" : "com.spotify.featran.FeatureExtractor.featureNames", "link" : "com\/spotify\/featran\/FeatureExtractor.html#featureNames:M[Seq[String]]", "kind" : "lazy val"}, {"label" : "featureSettings", "tail" : ": M[String]", "member" : "com.spotify.featran.FeatureExtractor.featureSettings", "link" : "com\/spotify\/featran\/FeatureExtractor.html#featureSettings:M[String]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/FeatureExtractor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/FeatureExtractor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/FeatureExtractor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/FeatureExtractor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/FeatureExtractor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/FeatureExtractor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/FeatureExtractor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/FeatureExtractor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/FeatureExtractor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/FeatureExtractor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/FeatureExtractor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/FeatureExtractor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/featran\/FeatureExtractor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/FeatureExtractor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/featran\/FeatureExtractor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/featran\/FeatureExtractor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/FeatureExtractor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/FeatureExtractor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/FeatureExtractor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/spotify\/featran\/FeatureExtractor.html", "kind" : "class"}, {"name" : "com.spotify.featran.FeatureRejection", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/FeatureRejection.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/FeatureRejection.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/FeatureRejection.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/FeatureRejection.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/FeatureRejection.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/FeatureRejection.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/FeatureRejection.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/FeatureRejection.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/FeatureRejection.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/FeatureRejection.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/FeatureRejection.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/FeatureRejection.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/featran\/FeatureRejection.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/FeatureRejection.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/featran\/FeatureRejection.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/featran\/FeatureRejection.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/FeatureRejection.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/FeatureRejection.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/FeatureRejection.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "object" : "com\/spotify\/featran\/FeatureRejection$.html", "members_object" : [{"label" : "Collision", "tail" : "", "member" : "com.spotify.featran.FeatureRejection.Collision", "link" : "com\/spotify\/featran\/FeatureRejection$.html#Collision", "kind" : "object"}, {"label" : "Outlier", "tail" : "", "member" : "com.spotify.featran.FeatureRejection.Outlier", "link" : "com\/spotify\/featran\/FeatureRejection$.html#OutlierextendsFeatureRejectionwithProductwithSerializable", "kind" : "case class"}, {"label" : "WrongDimension", "tail" : "", "member" : "com.spotify.featran.FeatureRejection.WrongDimension", "link" : "com\/spotify\/featran\/FeatureRejection$.html#WrongDimensionextendsFeatureRejectionwithProductwithSerializable", "kind" : "case class"}, {"label" : "Unseen", "tail" : "", "member" : "com.spotify.featran.FeatureRejection.Unseen", "link" : "com\/spotify\/featran\/FeatureRejection$.html#UnseenextendsFeatureRejectionwithProductwithSerializable", "kind" : "case class"}, {"label" : "OutOfBound", "tail" : "", "member" : "com.spotify.featran.FeatureRejection.OutOfBound", "link" : "com\/spotify\/featran\/FeatureRejection$.html#OutOfBoundextendsFeatureRejectionwithProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/FeatureRejection$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/FeatureRejection$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/FeatureRejection$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/FeatureRejection$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/FeatureRejection$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/FeatureRejection$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/FeatureRejection$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/FeatureRejection$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/FeatureRejection$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/FeatureRejection$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/FeatureRejection$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/FeatureRejection$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/featran\/FeatureRejection$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/FeatureRejection$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/featran\/FeatureRejection$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/featran\/FeatureRejection$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/FeatureRejection$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/FeatureRejection$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/FeatureRejection$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/spotify\/featran\/FeatureRejection.html", "kind" : "trait"}, {"name" : "com.spotify.featran.FeatureResult", "shortDescription" : "", "members_case class" : [{"member" : "com.spotify.featran.FeatureResult#<init>", "error" : "unsupported entity"}, {"label" : "original", "tail" : ": T", "member" : "com.spotify.featran.FeatureResult.original", "link" : "com\/spotify\/featran\/FeatureResult.html#original:T", "kind" : "val"}, {"label" : "rejections", "tail" : ": Map[String, FeatureRejection]", "member" : "com.spotify.featran.FeatureResult.rejections", "link" : "com\/spotify\/featran\/FeatureResult.html#rejections:Map[String,com.spotify.featran.FeatureRejection]", "kind" : "val"}, {"label" : "value", "tail" : ": F", "member" : "com.spotify.featran.FeatureResult.value", "link" : "com\/spotify\/featran\/FeatureResult.html#value:F", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/FeatureResult.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/FeatureResult.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/FeatureResult.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/FeatureResult.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/FeatureResult.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/FeatureResult.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/FeatureResult.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/FeatureResult.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/FeatureResult.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/FeatureResult.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/FeatureResult.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/FeatureResult.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/FeatureResult.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/FeatureResult.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/FeatureResult.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/FeatureResult.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/spotify\/featran\/FeatureResult.html", "kind" : "case class"}, {"name" : "com.spotify.featran.FeatureSpec", "shortDescription" : "Encapsulate specification for feature extraction and transformation.", "object" : "com\/spotify\/featran\/FeatureSpec$.html", "members_class" : [{"label" : "extractWithSettings", "tail" : "(settings: String)(arg0: FeatureBuilder[F], arg1: ClassTag[F]): RecordExtractor[T, F]", "member" : "com.spotify.featran.FeatureSpec.extractWithSettings", "link" : "com\/spotify\/featran\/FeatureSpec.html#extractWithSettings[F](settings:String)(implicitevidence$6:com.spotify.featran.FeatureBuilder[F],implicitevidence$7:scala.reflect.ClassTag[F]):com.spotify.featran.RecordExtractor[T,F]", "kind" : "def"}, {"label" : "extractWithSubsetSettings", "tail" : "(settings: String)(arg0: FeatureBuilder[F], arg1: ClassTag[F]): RecordExtractor[T, F]", "member" : "com.spotify.featran.FeatureSpec.extractWithSubsetSettings", "link" : "com\/spotify\/featran\/FeatureSpec.html#extractWithSubsetSettings[F](settings:String)(implicitevidence$4:com.spotify.featran.FeatureBuilder[F],implicitevidence$5:scala.reflect.ClassTag[F]):com.spotify.featran.RecordExtractor[T,F]", "kind" : "def"}, {"label" : "extractWithSettings", "tail" : "(input: M[T], settings: M[String])(arg0: CollectionType[M]): FeatureExtractor[M, T]", "member" : "com.spotify.featran.FeatureSpec.extractWithSettings", "link" : "com\/spotify\/featran\/FeatureSpec.html#extractWithSettings[M[_]](input:M[T],settings:M[String])(implicitevidence$3:com.spotify.featran.CollectionType[M]):com.spotify.featran.FeatureExtractor[M,T]", "kind" : "def"}, {"label" : "extractWithSubsetSettings", "tail" : "(input: M[T], settings: M[String])(arg0: CollectionType[M]): FeatureExtractor[M, T]", "member" : "com.spotify.featran.FeatureSpec.extractWithSubsetSettings", "link" : "com\/spotify\/featran\/FeatureSpec.html#extractWithSubsetSettings[M[_]](input:M[T],settings:M[String])(implicitevidence$2:com.spotify.featran.CollectionType[M]):com.spotify.featran.FeatureExtractor[M,T]", "kind" : "def"}, {"label" : "filter", "tail" : "(predicate: (Feature[T, _, _, _]) ⇒ Boolean): FeatureSpec[T]", "member" : "com.spotify.featran.FeatureSpec.filter", "link" : "com\/spotify\/featran\/FeatureSpec.html#filter(predicate:com.spotify.featran.Feature[T,_,_,_]=>Boolean):com.spotify.featran.FeatureSpec[T]", "kind" : "def"}, {"label" : "extract", "tail" : "(input: M[T])(arg0: CollectionType[M]): FeatureExtractor[M, T]", "member" : "com.spotify.featran.FeatureSpec.extract", "link" : "com\/spotify\/featran\/FeatureSpec.html#extract[M[_]](input:M[T])(implicitevidence$1:com.spotify.featran.CollectionType[M]):com.spotify.featran.FeatureExtractor[M,T]", "kind" : "def"}, {"label" : "compose", "tail" : "(spec: FeatureSpec[S])(f: (T) ⇒ S): FeatureSpec[T]", "member" : "com.spotify.featran.FeatureSpec.compose", "link" : "com\/spotify\/featran\/FeatureSpec.html#compose[S](spec:com.spotify.featran.FeatureSpec[S])(f:T=>S):com.spotify.featran.FeatureSpec[T]", "kind" : "def"}, {"label" : "cross", "tail" : "(k: (String, String))(f: (Double, Double) ⇒ Double): FeatureSpec[T]", "member" : "com.spotify.featran.FeatureSpec.cross", "link" : "com\/spotify\/featran\/FeatureSpec.html#cross(k:(String,String))(f:(Double,Double)=>Double):com.spotify.featran.FeatureSpec[T]", "kind" : "def"}, {"label" : "optional", "tail" : "(f: (T) ⇒ Option[A], default: Option[A])(t: Transformer[A, _, _]): FeatureSpec[T]", "member" : "com.spotify.featran.FeatureSpec.optional", "link" : "com\/spotify\/featran\/FeatureSpec.html#optional[A](f:T=>Option[A],default:Option[A])(t:com.spotify.featran.transformers.Transformer[A,_,_]):com.spotify.featran.FeatureSpec[T]", "kind" : "def"}, {"label" : "required", "tail" : "(f: (T) ⇒ A)(t: Transformer[A, _, _]): FeatureSpec[T]", "member" : "com.spotify.featran.FeatureSpec.required", "link" : "com\/spotify\/featran\/FeatureSpec.html#required[A](f:T=>A)(t:com.spotify.featran.transformers.Transformer[A,_,_]):com.spotify.featran.FeatureSpec[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/FeatureSpec.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/FeatureSpec.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/FeatureSpec.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/FeatureSpec.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/FeatureSpec.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/FeatureSpec.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/FeatureSpec.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/FeatureSpec.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/FeatureSpec.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/FeatureSpec.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/FeatureSpec.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/FeatureSpec.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/featran\/FeatureSpec.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/FeatureSpec.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/featran\/FeatureSpec.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/featran\/FeatureSpec.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/FeatureSpec.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/FeatureSpec.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/FeatureSpec.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "combine", "tail" : "(specs: FeatureSpec[T]*): FeatureSpec[T]", "member" : "com.spotify.featran.FeatureSpec.combine", "link" : "com\/spotify\/featran\/FeatureSpec$.html#combine[T](specs:com.spotify.featran.FeatureSpec[T]*):com.spotify.featran.FeatureSpec[T]", "kind" : "def"}, {"label" : "of", "tail" : "(): FeatureSpec[T]", "member" : "com.spotify.featran.FeatureSpec.of", "link" : "com\/spotify\/featran\/FeatureSpec$.html#of[T]:com.spotify.featran.FeatureSpec[T]", "kind" : "def"}, {"label" : "from", "tail" : "(arg0: ClassTag[T], arg1: scala.reflect.api.JavaUniverse.TypeTag[T], dt: DefaultTransform[Double]): FeatureSpec[T]", "member" : "com.spotify.featran.FeatureSpecCompat.from", "link" : "com\/spotify\/featran\/FeatureSpec$.html#from[T<:Product](implicitevidence$1:scala.reflect.ClassTag[T],implicitevidence$2:reflect.runtime.universe.TypeTag[T],implicitdt:com.spotify.featran.converters.DefaultTransform[Double]):com.spotify.featran.FeatureSpec[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/FeatureSpec$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/FeatureSpec$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/FeatureSpec$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/FeatureSpec$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/FeatureSpec$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/FeatureSpec$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/FeatureSpec$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/FeatureSpec$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/FeatureSpec$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/FeatureSpec$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/FeatureSpec$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/FeatureSpec$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/featran\/FeatureSpec$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/FeatureSpec$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/featran\/FeatureSpec$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/featran\/FeatureSpec$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/FeatureSpec$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/FeatureSpec$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/FeatureSpec$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/spotify\/featran\/FeatureSpec.html", "kind" : "class"}, {"name" : "com.spotify.featran.FeatureSpecCompat", "members_trait" : [{"label" : "from", "tail" : "(arg0: ClassTag[T], arg1: scala.reflect.api.JavaUniverse.TypeTag[T], dt: DefaultTransform[Double]): FeatureSpec[T]", "member" : "com.spotify.featran.FeatureSpecCompat.from", "link" : "com\/spotify\/featran\/FeatureSpecCompat.html#from[T<:Product](implicitevidence$1:scala.reflect.ClassTag[T],implicitevidence$2:reflect.runtime.universe.TypeTag[T],implicitdt:com.spotify.featran.converters.DefaultTransform[Double]):com.spotify.featran.FeatureSpec[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/FeatureSpecCompat.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/FeatureSpecCompat.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/FeatureSpecCompat.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/FeatureSpecCompat.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/FeatureSpecCompat.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/FeatureSpecCompat.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/FeatureSpecCompat.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/FeatureSpecCompat.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/FeatureSpecCompat.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/FeatureSpecCompat.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/FeatureSpecCompat.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/FeatureSpecCompat.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/featran\/FeatureSpecCompat.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/FeatureSpecCompat.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/featran\/FeatureSpecCompat.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/featran\/FeatureSpecCompat.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/FeatureSpecCompat.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/FeatureSpecCompat.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/FeatureSpecCompat.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "com\/spotify\/featran\/FeatureSpecCompat.html", "kind" : "trait"}, {"name" : "com.spotify.featran.FlatConverter", "shortDescription" : "Companion to FlatReader.", "object" : "com\/spotify\/featran\/FlatConverter$.html", "members_object" : [{"label" : "multiSpec", "tail" : "(spec: MultiFeatureSpec[T])(arg0: ClassTag[T], arg1: ClassTag[A], arg2: FlatWriter[A]): FlatConverter[T, A]", "member" : "com.spotify.featran.FlatConverter.multiSpec", "link" : "com\/spotify\/featran\/FlatConverter$.html#multiSpec[T,A](spec:com.spotify.featran.MultiFeatureSpec[T])(implicitevidence$4:scala.reflect.ClassTag[T],implicitevidence$5:scala.reflect.ClassTag[A],implicitevidence$6:com.spotify.featran.FlatWriter[A]):com.spotify.featran.FlatConverter[T,A]", "kind" : "def"}, {"label" : "apply", "tail" : "(spec: FeatureSpec[T])(arg0: ClassTag[T], arg1: ClassTag[A], arg2: FlatWriter[A]): FlatConverter[T, A]", "member" : "com.spotify.featran.FlatConverter.apply", "link" : "com\/spotify\/featran\/FlatConverter$.html#apply[T,A](spec:com.spotify.featran.FeatureSpec[T])(implicitevidence$1:scala.reflect.ClassTag[T],implicitevidence$2:scala.reflect.ClassTag[A],implicitevidence$3:com.spotify.featran.FlatWriter[A]):com.spotify.featran.FlatConverter[T,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/FlatConverter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/FlatConverter$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/FlatConverter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/FlatConverter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/FlatConverter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/FlatConverter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/FlatConverter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/FlatConverter$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/FlatConverter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/FlatConverter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/FlatConverter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/FlatConverter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/featran\/FlatConverter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/FlatConverter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/featran\/FlatConverter$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/featran\/FlatConverter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/FlatConverter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/FlatConverter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/FlatConverter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.spotify.featran.FlatExtractor", "shortDescription" : "Sometimes it is useful to store the features in an intermediate state in normally a flat versionlike Examples or maybe JSON.", "object" : "com\/spotify\/featran\/FlatExtractor$.html", "members_object" : [{"label" : "multiFlatSpec", "tail" : "(spec: MultiFeatureSpec[X])(arg0: ClassTag[T], arg1: FlatReader[T], arg2: ClassTag[X]): MultiFeatureSpec[T]", "member" : "com.spotify.featran.FlatExtractor.multiFlatSpec", "link" : "com\/spotify\/featran\/FlatExtractor$.html#multiFlatSpec[T,X](spec:com.spotify.featran.MultiFeatureSpec[X])(implicitevidence$7:scala.reflect.ClassTag[T],implicitevidence$8:com.spotify.featran.FlatReader[T],implicitevidence$9:scala.reflect.ClassTag[X]):com.spotify.featran.MultiFeatureSpec[T]", "kind" : "def"}, {"label" : "flatSpec", "tail" : "(spec: FeatureSpec[X])(arg0: ClassTag[T], arg1: FlatReader[T], arg2: ClassTag[X]): FeatureSpec[T]", "member" : "com.spotify.featran.FlatExtractor.flatSpec", "link" : "com\/spotify\/featran\/FlatExtractor$.html#flatSpec[T,X](spec:com.spotify.featran.FeatureSpec[X])(implicitevidence$4:scala.reflect.ClassTag[T],implicitevidence$5:com.spotify.featran.FlatReader[T],implicitevidence$6:scala.reflect.ClassTag[X]):com.spotify.featran.FeatureSpec[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(settings: M[String])(arg0: CollectionType[M], arg1: ClassTag[T], arg2: FlatReader[T]): FlatExtractor[M, T]", "member" : "com.spotify.featran.FlatExtractor.apply", "link" : "com\/spotify\/featran\/FlatExtractor$.html#apply[M[_],T](settings:M[String])(implicitevidence$1:com.spotify.featran.CollectionType[M],implicitevidence$2:scala.reflect.ClassTag[T],implicitevidence$3:com.spotify.featran.FlatReader[T]):com.spotify.featran.FlatExtractor[M,T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/FlatExtractor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/FlatExtractor$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/FlatExtractor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/FlatExtractor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/FlatExtractor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/FlatExtractor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/FlatExtractor$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/FlatExtractor$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/FlatExtractor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/FlatExtractor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/FlatExtractor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/FlatExtractor$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/featran\/FlatExtractor$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/FlatExtractor$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/featran\/FlatExtractor$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/featran\/FlatExtractor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/FlatExtractor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/FlatExtractor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/FlatExtractor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.spotify.featran.FlatReader", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/FlatReader.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/FlatReader.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/FlatReader.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/FlatReader.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/FlatReader.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/FlatReader.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/FlatReader.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/FlatReader.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/FlatReader.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/FlatReader.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/FlatReader.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/FlatReader.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/featran\/FlatReader.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/FlatReader.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/featran\/FlatReader.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/featran\/FlatReader.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/FlatReader.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/FlatReader.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/FlatReader.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "readStrings", "tail" : "(name: String): (T) ⇒ Option[Seq[String]]", "member" : "com.spotify.featran.FlatReader.readStrings", "link" : "com\/spotify\/featran\/FlatReader.html#readStrings(name:String):T=>Option[Seq[String]]", "kind" : "abstract def"}, {"label" : "readString", "tail" : "(name: String): (T) ⇒ Option[String]", "member" : "com.spotify.featran.FlatReader.readString", "link" : "com\/spotify\/featran\/FlatReader.html#readString(name:String):T=>Option[String]", "kind" : "abstract def"}, {"label" : "readDoubleArray", "tail" : "(name: String): (T) ⇒ Option[Array[Double]]", "member" : "com.spotify.featran.FlatReader.readDoubleArray", "link" : "com\/spotify\/featran\/FlatReader.html#readDoubleArray(name:String):T=>Option[Array[Double]]", "kind" : "abstract def"}, {"label" : "readDoubles", "tail" : "(name: String): (T) ⇒ Option[Seq[Double]]", "member" : "com.spotify.featran.FlatReader.readDoubles", "link" : "com\/spotify\/featran\/FlatReader.html#readDoubles(name:String):T=>Option[Seq[Double]]", "kind" : "abstract def"}, {"label" : "readWeightedLabel", "tail" : "(name: String): (T) ⇒ Option[List[WeightedLabel]]", "member" : "com.spotify.featran.FlatReader.readWeightedLabel", "link" : "com\/spotify\/featran\/FlatReader.html#readWeightedLabel(name:String):T=>Option[List[com.spotify.featran.transformers.WeightedLabel]]", "kind" : "abstract def"}, {"label" : "readMdlRecord", "tail" : "(name: String): (T) ⇒ Option[MDLRecord[String]]", "member" : "com.spotify.featran.FlatReader.readMdlRecord", "link" : "com\/spotify\/featran\/FlatReader.html#readMdlRecord(name:String):T=>Option[com.spotify.featran.transformers.MDLRecord[String]]", "kind" : "abstract def"}, {"label" : "readDouble", "tail" : "(name: String): (T) ⇒ Option[Double]", "member" : "com.spotify.featran.FlatReader.readDouble", "link" : "com\/spotify\/featran\/FlatReader.html#readDouble(name:String):T=>Option[Double]", "kind" : "abstract def"}], "shortDescription" : "TypeClass that is used to read data from flat files.", "object" : "com\/spotify\/featran\/FlatReader$.html", "members_object" : [{"label" : "nonInheritedOps", "tail" : "", "member" : "com.spotify.featran.FlatReader.nonInheritedOps", "link" : "com\/spotify\/featran\/FlatReader$.html#nonInheritedOps", "kind" : "object"}, {"label" : "ToFlatReaderOps", "tail" : "", "member" : "com.spotify.featran.FlatReader.ToFlatReaderOps", "link" : "com\/spotify\/featran\/FlatReader$.html#ToFlatReaderOpsextendsSerializable", "kind" : "trait"}, {"label" : "AllOps", "tail" : "", "member" : "com.spotify.featran.FlatReader.AllOps", "link" : "com\/spotify\/featran\/FlatReader$.html#AllOps[T]extendsFlatReader.Ops[T]", "kind" : "trait"}, {"label" : "Ops", "tail" : "", "member" : "com.spotify.featran.FlatReader.Ops", "link" : "com\/spotify\/featran\/FlatReader$.html#Ops[T]extendsSerializable", "kind" : "trait"}, {"label" : "ops", "tail" : "", "member" : "com.spotify.featran.FlatReader.ops", "link" : "com\/spotify\/featran\/FlatReader$.html#ops", "kind" : "object"}, {"label" : "apply", "tail" : "(instance: FlatReader[T]): FlatReader[T]", "member" : "com.spotify.featran.FlatReader.apply", "link" : "com\/spotify\/featran\/FlatReader$.html#apply[T](implicitinstance:com.spotify.featran.FlatReader[T]):com.spotify.featran.FlatReader[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/FlatReader$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/FlatReader$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/FlatReader$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/FlatReader$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/FlatReader$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/FlatReader$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/FlatReader$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/FlatReader$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/FlatReader$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/FlatReader$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/FlatReader$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/FlatReader$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/featran\/FlatReader$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/FlatReader$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/featran\/FlatReader$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/featran\/FlatReader$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/FlatReader$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/FlatReader$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/FlatReader$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/spotify\/featran\/FlatReader.html", "kind" : "trait"}, {"name" : "com.spotify.featran.FlatWriter", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/FlatWriter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/FlatWriter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/FlatWriter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/FlatWriter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/FlatWriter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/FlatWriter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/FlatWriter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/FlatWriter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/FlatWriter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/FlatWriter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/FlatWriter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/FlatWriter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/featran\/FlatWriter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/FlatWriter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/featran\/FlatWriter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/featran\/FlatWriter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/FlatWriter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/FlatWriter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/FlatWriter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "writer", "tail" : "(): (Seq[IF]) ⇒ T", "member" : "com.spotify.featran.FlatWriter.writer", "link" : "com\/spotify\/featran\/FlatWriter.html#writer:Seq[FlatWriter.this.IF]=>T", "kind" : "abstract def"}, {"label" : "writeStrings", "tail" : "(name: String): (Option[Seq[String]]) ⇒ IF", "member" : "com.spotify.featran.FlatWriter.writeStrings", "link" : "com\/spotify\/featran\/FlatWriter.html#writeStrings(name:String):Option[Seq[String]]=>FlatWriter.this.IF", "kind" : "abstract def"}, {"label" : "writeString", "tail" : "(name: String): (Option[String]) ⇒ IF", "member" : "com.spotify.featran.FlatWriter.writeString", "link" : "com\/spotify\/featran\/FlatWriter.html#writeString(name:String):Option[String]=>FlatWriter.this.IF", "kind" : "abstract def"}, {"label" : "writeDoubleArray", "tail" : "(name: String): (Option[Array[Double]]) ⇒ IF", "member" : "com.spotify.featran.FlatWriter.writeDoubleArray", "link" : "com\/spotify\/featran\/FlatWriter.html#writeDoubleArray(name:String):Option[Array[Double]]=>FlatWriter.this.IF", "kind" : "abstract def"}, {"label" : "writeDoubles", "tail" : "(name: String): (Option[Seq[Double]]) ⇒ IF", "member" : "com.spotify.featran.FlatWriter.writeDoubles", "link" : "com\/spotify\/featran\/FlatWriter.html#writeDoubles(name:String):Option[Seq[Double]]=>FlatWriter.this.IF", "kind" : "abstract def"}, {"label" : "writeWeightedLabel", "tail" : "(name: String): (Option[Seq[WeightedLabel]]) ⇒ IF", "member" : "com.spotify.featran.FlatWriter.writeWeightedLabel", "link" : "com\/spotify\/featran\/FlatWriter.html#writeWeightedLabel(name:String):Option[Seq[com.spotify.featran.transformers.WeightedLabel]]=>FlatWriter.this.IF", "kind" : "abstract def"}, {"label" : "writeMdlRecord", "tail" : "(name: String): (Option[MDLRecord[String]]) ⇒ IF", "member" : "com.spotify.featran.FlatWriter.writeMdlRecord", "link" : "com\/spotify\/featran\/FlatWriter.html#writeMdlRecord(name:String):Option[com.spotify.featran.transformers.MDLRecord[String]]=>FlatWriter.this.IF", "kind" : "abstract def"}, {"label" : "writeDouble", "tail" : "(name: String): (Option[Double]) ⇒ IF", "member" : "com.spotify.featran.FlatWriter.writeDouble", "link" : "com\/spotify\/featran\/FlatWriter.html#writeDouble(name:String):Option[Double]=>FlatWriter.this.IF", "kind" : "abstract def"}, {"member" : "com.spotify.featran.FlatWriter.IF", "error" : "unsupported entity"}], "shortDescription" : "TypeClass for implementing the writer to a flat format keyed by name", "object" : "com\/spotify\/featran\/FlatWriter$.html", "members_object" : [{"label" : "nonInheritedOps", "tail" : "", "member" : "com.spotify.featran.FlatWriter.nonInheritedOps", "link" : "com\/spotify\/featran\/FlatWriter$.html#nonInheritedOps", "kind" : "object"}, {"label" : "ToFlatWriterOps", "tail" : "", "member" : "com.spotify.featran.FlatWriter.ToFlatWriterOps", "link" : "com\/spotify\/featran\/FlatWriter$.html#ToFlatWriterOpsextendsSerializable", "kind" : "trait"}, {"label" : "AllOps", "tail" : "", "member" : "com.spotify.featran.FlatWriter.AllOps", "link" : "com\/spotify\/featran\/FlatWriter$.html#AllOps[T]extendsFlatWriter.Ops[T]", "kind" : "trait"}, {"label" : "Ops", "tail" : "", "member" : "com.spotify.featran.FlatWriter.Ops", "link" : "com\/spotify\/featran\/FlatWriter$.html#Ops[T]extendsSerializable", "kind" : "trait"}, {"label" : "ops", "tail" : "", "member" : "com.spotify.featran.FlatWriter.ops", "link" : "com\/spotify\/featran\/FlatWriter$.html#ops", "kind" : "object"}, {"label" : "apply", "tail" : "(instance: FlatWriter[T]): FlatWriter[T]", "member" : "com.spotify.featran.FlatWriter.apply", "link" : "com\/spotify\/featran\/FlatWriter$.html#apply[T](implicitinstance:com.spotify.featran.FlatWriter[T]):com.spotify.featran.FlatWriter[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/FlatWriter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/FlatWriter$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/FlatWriter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/FlatWriter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/FlatWriter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/FlatWriter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/FlatWriter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/FlatWriter$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/FlatWriter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/FlatWriter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/FlatWriter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/FlatWriter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/featran\/FlatWriter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/FlatWriter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/featran\/FlatWriter$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/featran\/FlatWriter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/FlatWriter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/FlatWriter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/FlatWriter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/spotify\/featran\/FlatWriter.html", "kind" : "trait"}, {"name" : "com.spotify.featran.FloatingPoint", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/FloatingPoint.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/FloatingPoint.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/FloatingPoint.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/FloatingPoint.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/FloatingPoint.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/FloatingPoint.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/FloatingPoint.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/FloatingPoint.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/FloatingPoint.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/FloatingPoint.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/FloatingPoint.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/FloatingPoint.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/featran\/FloatingPoint.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/FloatingPoint.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/featran\/FloatingPoint.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/featran\/FloatingPoint.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/FloatingPoint.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/FloatingPoint.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/FloatingPoint.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "fromDouble", "tail" : "(x: Double): T", "member" : "com.spotify.featran.FloatingPoint.fromDouble", "link" : "com\/spotify\/featran\/FloatingPoint.html#fromDouble(x:Double):T", "kind" : "abstract def"}], "shortDescription" : "Type class for floating point primitives.", "object" : "com\/spotify\/featran\/FloatingPoint$.html", "members_object" : [{"label" : "nonInheritedOps", "tail" : "", "member" : "com.spotify.featran.FloatingPoint.nonInheritedOps", "link" : "com\/spotify\/featran\/FloatingPoint$.html#nonInheritedOps", "kind" : "object"}, {"label" : "ToFloatingPointOps", "tail" : "", "member" : "com.spotify.featran.FloatingPoint.ToFloatingPointOps", "link" : "com\/spotify\/featran\/FloatingPoint$.html#ToFloatingPointOpsextendsSerializable", "kind" : "trait"}, {"label" : "AllOps", "tail" : "", "member" : "com.spotify.featran.FloatingPoint.AllOps", "link" : "com\/spotify\/featran\/FloatingPoint$.html#AllOps[T]extendsFloatingPoint.Ops[T]", "kind" : "trait"}, {"label" : "Ops", "tail" : "", "member" : "com.spotify.featran.FloatingPoint.Ops", "link" : "com\/spotify\/featran\/FloatingPoint$.html#Ops[T]extendsSerializable", "kind" : "trait"}, {"label" : "ops", "tail" : "", "member" : "com.spotify.featran.FloatingPoint.ops", "link" : "com\/spotify\/featran\/FloatingPoint$.html#ops", "kind" : "object"}, {"label" : "apply", "tail" : "(instance: FloatingPoint[T]): FloatingPoint[T]", "member" : "com.spotify.featran.FloatingPoint.apply", "link" : "com\/spotify\/featran\/FloatingPoint$.html#apply[T](implicitinstance:com.spotify.featran.FloatingPoint[T]):com.spotify.featran.FloatingPoint[T]", "kind" : "def"}, {"label" : "doubleFP", "tail" : ": FloatingPoint[Double]", "member" : "com.spotify.featran.FloatingPoint.doubleFP", "link" : "com\/spotify\/featran\/FloatingPoint$.html#doubleFP:com.spotify.featran.FloatingPoint[Double]", "kind" : "implicit val"}, {"label" : "floatFP", "tail" : ": FloatingPoint[Float]", "member" : "com.spotify.featran.FloatingPoint.floatFP", "link" : "com\/spotify\/featran\/FloatingPoint$.html#floatFP:com.spotify.featran.FloatingPoint[Float]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/FloatingPoint$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/FloatingPoint$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/FloatingPoint$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/FloatingPoint$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/FloatingPoint$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/FloatingPoint$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/FloatingPoint$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/FloatingPoint$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/FloatingPoint$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/FloatingPoint$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/FloatingPoint$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/FloatingPoint$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/featran\/FloatingPoint$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/FloatingPoint$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/featran\/FloatingPoint$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/featran\/FloatingPoint$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/FloatingPoint$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/FloatingPoint$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/FloatingPoint$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/spotify\/featran\/FloatingPoint.html", "kind" : "trait"}, {"name" : "com.spotify.featran.MultiFeatureExtractor", "shortDescription" : "Encapsulate features extracted from a MultiFeatureSpec.", "members_class" : [{"label" : "featureResults", "tail" : "(arg0: FeatureBuilder[F], arg1: ClassTag[F]): M[(Seq[F], Seq[Map[String, FeatureRejection]], T)]", "member" : "com.spotify.featran.MultiFeatureExtractor.featureResults", "link" : "com\/spotify\/featran\/MultiFeatureExtractor.html#featureResults[F](implicitevidence$4:com.spotify.featran.FeatureBuilder[F],implicitevidence$5:scala.reflect.ClassTag[F]):M[(Seq[F],Seq[Map[String,com.spotify.featran.FeatureRejection]],T)]", "kind" : "def"}, {"label" : "featureValues", "tail" : "(arg0: FeatureBuilder[F], arg1: ClassTag[F]): M[Seq[F]]", "member" : "com.spotify.featran.MultiFeatureExtractor.featureValues", "link" : "com\/spotify\/featran\/MultiFeatureExtractor.html#featureValues[F](implicitevidence$2:com.spotify.featran.FeatureBuilder[F],implicitevidence$3:scala.reflect.ClassTag[F]):M[Seq[F]]", "kind" : "def"}, {"label" : "featureNames", "tail" : ": M[Seq[Seq[String]]]", "member" : "com.spotify.featran.MultiFeatureExtractor.featureNames", "link" : "com\/spotify\/featran\/MultiFeatureExtractor.html#featureNames:M[Seq[Seq[String]]]", "kind" : "lazy val"}, {"label" : "featureSettings", "tail" : ": M[String]", "member" : "com.spotify.featran.MultiFeatureExtractor.featureSettings", "link" : "com\/spotify\/featran\/MultiFeatureExtractor.html#featureSettings:M[String]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/MultiFeatureExtractor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/MultiFeatureExtractor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/MultiFeatureExtractor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/MultiFeatureExtractor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/MultiFeatureExtractor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/MultiFeatureExtractor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/MultiFeatureExtractor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/MultiFeatureExtractor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/MultiFeatureExtractor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/MultiFeatureExtractor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/MultiFeatureExtractor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/MultiFeatureExtractor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/featran\/MultiFeatureExtractor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/MultiFeatureExtractor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/featran\/MultiFeatureExtractor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/featran\/MultiFeatureExtractor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/MultiFeatureExtractor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/MultiFeatureExtractor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/MultiFeatureExtractor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/spotify\/featran\/MultiFeatureExtractor.html", "kind" : "class"}, {"name" : "com.spotify.featran.MultiFeatureSpec", "shortDescription" : "Wrapper for FeatureSpec that allows for combination and separation of different specs.", "object" : "com\/spotify\/featran\/MultiFeatureSpec$.html", "members_class" : [{"label" : "extractWithSubsetSettings", "tail" : "(input: M[T], settings: M[String])(arg0: CollectionType[M]): MultiFeatureExtractor[M, T]", "member" : "com.spotify.featran.MultiFeatureSpec.extractWithSubsetSettings", "link" : "com\/spotify\/featran\/MultiFeatureSpec.html#extractWithSubsetSettings[M[_]](input:M[T],settings:M[String])(implicitevidence$3:com.spotify.featran.CollectionType[M]):com.spotify.featran.MultiFeatureExtractor[M,T]", "kind" : "def"}, {"label" : "extractWithSettings", "tail" : "(input: M[T], settings: M[String])(arg0: CollectionType[M]): MultiFeatureExtractor[M, T]", "member" : "com.spotify.featran.MultiFeatureSpec.extractWithSettings", "link" : "com\/spotify\/featran\/MultiFeatureSpec.html#extractWithSettings[M[_]](input:M[T],settings:M[String])(implicitevidence$2:com.spotify.featran.CollectionType[M]):com.spotify.featran.MultiFeatureExtractor[M,T]", "kind" : "def"}, {"label" : "filter", "tail" : "(predicate: (Feature[T, _, _, _]) ⇒ Boolean): MultiFeatureSpec[T]", "member" : "com.spotify.featran.MultiFeatureSpec.filter", "link" : "com\/spotify\/featran\/MultiFeatureSpec.html#filter(predicate:com.spotify.featran.Feature[T,_,_,_]=>Boolean):com.spotify.featran.MultiFeatureSpec[T]", "kind" : "def"}, {"label" : "extract", "tail" : "(input: M[T])(arg0: CollectionType[M]): MultiFeatureExtractor[M, T]", "member" : "com.spotify.featran.MultiFeatureSpec.extract", "link" : "com\/spotify\/featran\/MultiFeatureSpec.html#extract[M[_]](input:M[T])(implicitevidence$1:com.spotify.featran.CollectionType[M]):com.spotify.featran.MultiFeatureExtractor[M,T]", "kind" : "def"}, {"member" : "com.spotify.featran.MultiFeatureSpec#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/MultiFeatureSpec.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/MultiFeatureSpec.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/MultiFeatureSpec.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/MultiFeatureSpec.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/MultiFeatureSpec.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/MultiFeatureSpec.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/MultiFeatureSpec.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/MultiFeatureSpec.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/MultiFeatureSpec.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/MultiFeatureSpec.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/MultiFeatureSpec.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/MultiFeatureSpec.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/featran\/MultiFeatureSpec.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/MultiFeatureSpec.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/featran\/MultiFeatureSpec.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/featran\/MultiFeatureSpec.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/MultiFeatureSpec.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/MultiFeatureSpec.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/MultiFeatureSpec.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(specs: FeatureSpec[T]*): MultiFeatureSpec[T]", "member" : "com.spotify.featran.MultiFeatureSpec.apply", "link" : "com\/spotify\/featran\/MultiFeatureSpec$.html#apply[T](specs:com.spotify.featran.FeatureSpec[T]*):com.spotify.featran.MultiFeatureSpec[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/MultiFeatureSpec$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/MultiFeatureSpec$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/MultiFeatureSpec$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/MultiFeatureSpec$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/MultiFeatureSpec$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/MultiFeatureSpec$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/MultiFeatureSpec$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/MultiFeatureSpec$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/MultiFeatureSpec$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/MultiFeatureSpec$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/MultiFeatureSpec$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/MultiFeatureSpec$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/featran\/MultiFeatureSpec$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/MultiFeatureSpec$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/featran\/MultiFeatureSpec$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/featran\/MultiFeatureSpec$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/MultiFeatureSpec$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/MultiFeatureSpec$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/MultiFeatureSpec$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/spotify\/featran\/MultiFeatureSpec.html", "kind" : "class"}, {"name" : "com.spotify.featran.NamedSparseArray", "shortDescription" : "A SparseArray with names of non-zero entries.", "members_case class" : [{"label" : "toDense", "tail" : "(ct: ClassTag[T]): Array[T]", "member" : "com.spotify.featran.NamedSparseArray.toDense", "link" : "com\/spotify\/featran\/NamedSparseArray.html#toDense(implicitct:scala.reflect.ClassTag[T]):Array[T]", "kind" : "def"}, {"member" : "com.spotify.featran.NamedSparseArray#<init>", "error" : "unsupported entity"}, {"label" : "names", "tail" : ": Seq[String]", "member" : "com.spotify.featran.NamedSparseArray.names", "link" : "com\/spotify\/featran\/NamedSparseArray.html#names:Seq[String]", "kind" : "val"}, {"label" : "length", "tail" : ": Int", "member" : "com.spotify.featran.NamedSparseArray.length", "link" : "com\/spotify\/featran\/NamedSparseArray.html#length:Int", "kind" : "val"}, {"label" : "values", "tail" : ": Array[T]", "member" : "com.spotify.featran.NamedSparseArray.values", "link" : "com\/spotify\/featran\/NamedSparseArray.html#values:Array[T]", "kind" : "val"}, {"label" : "indices", "tail" : ": Array[Int]", "member" : "com.spotify.featran.NamedSparseArray.indices", "link" : "com\/spotify\/featran\/NamedSparseArray.html#indices:Array[Int]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/NamedSparseArray.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/NamedSparseArray.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/NamedSparseArray.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/NamedSparseArray.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/NamedSparseArray.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/NamedSparseArray.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/NamedSparseArray.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/NamedSparseArray.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/NamedSparseArray.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/NamedSparseArray.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/NamedSparseArray.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/NamedSparseArray.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/NamedSparseArray.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/NamedSparseArray.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/NamedSparseArray.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/NamedSparseArray.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/spotify\/featran\/NamedSparseArray.html", "kind" : "case class"}, {"name" : "com.spotify.featran.RecordExtractor", "shortDescription" : "Encapsulate RecordExtractor for extracting individual records.", "object" : "com\/spotify\/featran\/RecordExtractor$.html", "members_class" : [{"label" : "featureResult", "tail" : "(record: T): FeatureResult[F, T]", "member" : "com.spotify.featran.RecordExtractor.featureResult", "link" : "com\/spotify\/featran\/RecordExtractor.html#featureResult(record:T):com.spotify.featran.FeatureResult[F,T]", "kind" : "def"}, {"label" : "featureValue", "tail" : "(record: T): F", "member" : "com.spotify.featran.RecordExtractor.featureValue", "link" : "com\/spotify\/featran\/RecordExtractor.html#featureValue(record:T):F", "kind" : "def"}, {"label" : "featureNames", "tail" : ": Seq[String]", "member" : "com.spotify.featran.RecordExtractor.featureNames", "link" : "com\/spotify\/featran\/RecordExtractor.html#featureNames:Seq[String]", "kind" : "val"}, {"label" : "featureSettings", "tail" : ": String", "member" : "com.spotify.featran.RecordExtractor.featureSettings", "link" : "com\/spotify\/featran\/RecordExtractor.html#featureSettings:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/RecordExtractor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/RecordExtractor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/RecordExtractor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/RecordExtractor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/RecordExtractor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/RecordExtractor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/RecordExtractor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/RecordExtractor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/RecordExtractor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/RecordExtractor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/RecordExtractor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/RecordExtractor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/featran\/RecordExtractor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/RecordExtractor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/featran\/RecordExtractor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/featran\/RecordExtractor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/RecordExtractor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/RecordExtractor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/RecordExtractor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/RecordExtractor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/RecordExtractor$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/RecordExtractor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/RecordExtractor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/RecordExtractor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/RecordExtractor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/RecordExtractor$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/RecordExtractor$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/RecordExtractor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/RecordExtractor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/RecordExtractor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/RecordExtractor$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/featran\/RecordExtractor$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/RecordExtractor$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/featran\/RecordExtractor$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/featran\/RecordExtractor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/RecordExtractor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/RecordExtractor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/RecordExtractor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/spotify\/featran\/RecordExtractor.html", "kind" : "class"}, {"name" : "com.spotify.featran.SparseArray", "shortDescription" : "A sparse representation of an array using two arrays for indices and values of non-zero entries.", "members_case class" : [{"label" : "toDense", "tail" : "(ct: ClassTag[T]): Array[T]", "member" : "com.spotify.featran.SparseArray.toDense", "link" : "com\/spotify\/featran\/SparseArray.html#toDense(implicitct:scala.reflect.ClassTag[T]):Array[T]", "kind" : "def"}, {"member" : "com.spotify.featran.SparseArray#<init>", "error" : "unsupported entity"}, {"label" : "length", "tail" : ": Int", "member" : "com.spotify.featran.SparseArray.length", "link" : "com\/spotify\/featran\/SparseArray.html#length:Int", "kind" : "val"}, {"label" : "values", "tail" : ": Array[T]", "member" : "com.spotify.featran.SparseArray.values", "link" : "com\/spotify\/featran\/SparseArray.html#values:Array[T]", "kind" : "val"}, {"label" : "indices", "tail" : ": Array[Int]", "member" : "com.spotify.featran.SparseArray.indices", "link" : "com\/spotify\/featran\/SparseArray.html#indices:Array[Int]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/SparseArray.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/SparseArray.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/SparseArray.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/SparseArray.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/SparseArray.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/SparseArray.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/SparseArray.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/SparseArray.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/SparseArray.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/SparseArray.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/SparseArray.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/SparseArray.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/SparseArray.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/SparseArray.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/SparseArray.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/SparseArray.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/spotify\/featran\/SparseArray.html", "kind" : "case class"}], "scala" : [], "com.spotify.featran.converters" : [{"name" : "com.spotify.featran.converters.CaseClassConverter", "shortDescription" : "", "object" : "com\/spotify\/featran\/converters\/CaseClassConverter$.html", "members_object" : [{"label" : "toSpec", "tail" : "(tt: scala.reflect.api.JavaUniverse.TypeTag[T], ct: ClassTag[T], d: DefaultTransform[Double]): FeatureSpec[T]", "member" : "com.spotify.featran.converters.CaseClassConverter.toSpec", "link" : "com\/spotify\/featran\/converters\/CaseClassConverter$.html#toSpec[T<:Product](implicittt:reflect.runtime.universe.TypeTag[T],implicitct:scala.reflect.ClassTag[T],implicitd:com.spotify.featran.converters.DefaultTransform[Double]):com.spotify.featran.FeatureSpec[T]", "kind" : "def"}, {"label" : "get", "tail" : "(a: T, idx: Int)(arg0: scala.reflect.api.JavaUniverse.TypeTag[T], arg1: ClassTag[T]): Any", "member" : "com.spotify.featran.converters.CaseClassConverter.get", "link" : "com\/spotify\/featran\/converters\/CaseClassConverter$.html#get[T](a:T,idx:Int)(implicitevidence$2:reflect.runtime.universe.TypeTag[T],implicitevidence$3:scala.reflect.ClassTag[T]):Any", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/converters\/CaseClassConverter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/converters\/CaseClassConverter$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/converters\/CaseClassConverter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/converters\/CaseClassConverter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/converters\/CaseClassConverter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/converters\/CaseClassConverter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/converters\/CaseClassConverter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/converters\/CaseClassConverter$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/converters\/CaseClassConverter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/converters\/CaseClassConverter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/converters\/CaseClassConverter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/converters\/CaseClassConverter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/featran\/converters\/CaseClassConverter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/converters\/CaseClassConverter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/featran\/converters\/CaseClassConverter$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/featran\/converters\/CaseClassConverter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/converters\/CaseClassConverter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/converters\/CaseClassConverter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/converters\/CaseClassConverter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.spotify.featran.converters.DefaultTransform", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/converters\/DefaultTransform.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/converters\/DefaultTransform.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/converters\/DefaultTransform.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/converters\/DefaultTransform.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/converters\/DefaultTransform.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/converters\/DefaultTransform.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/converters\/DefaultTransform.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/converters\/DefaultTransform.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/converters\/DefaultTransform.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/converters\/DefaultTransform.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/converters\/DefaultTransform.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/converters\/DefaultTransform.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/featran\/converters\/DefaultTransform.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/converters\/DefaultTransform.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/featran\/converters\/DefaultTransform.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/featran\/converters\/DefaultTransform.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/converters\/DefaultTransform.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/converters\/DefaultTransform.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/converters\/DefaultTransform.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(featureName: String): Transformer[T, _, _]", "member" : "com.spotify.featran.converters.DefaultTransform.apply", "link" : "com\/spotify\/featran\/converters\/DefaultTransform.html#apply(featureName:String):com.spotify.featran.transformers.Transformer[T,_,_]", "kind" : "abstract def"}], "shortDescription" : "Default Type Class used by the from generator for Case Class Conversions", "object" : "com\/spotify\/featran\/converters\/DefaultTransform$.html", "members_object" : [{"label" : "nonInheritedOps", "tail" : "", "member" : "com.spotify.featran.converters.DefaultTransform.nonInheritedOps", "link" : "com\/spotify\/featran\/converters\/DefaultTransform$.html#nonInheritedOps", "kind" : "object"}, {"label" : "ToDefaultTransformOps", "tail" : "", "member" : "com.spotify.featran.converters.DefaultTransform.ToDefaultTransformOps", "link" : "com\/spotify\/featran\/converters\/DefaultTransform$.html#ToDefaultTransformOpsextendsSerializable", "kind" : "trait"}, {"label" : "AllOps", "tail" : "", "member" : "com.spotify.featran.converters.DefaultTransform.AllOps", "link" : "com\/spotify\/featran\/converters\/DefaultTransform$.html#AllOps[T]extendsDefaultTransform.Ops[T]", "kind" : "trait"}, {"label" : "Ops", "tail" : "", "member" : "com.spotify.featran.converters.DefaultTransform.Ops", "link" : "com\/spotify\/featran\/converters\/DefaultTransform$.html#Ops[T]extendsSerializable", "kind" : "trait"}, {"label" : "ops", "tail" : "", "member" : "com.spotify.featran.converters.DefaultTransform.ops", "link" : "com\/spotify\/featran\/converters\/DefaultTransform$.html#ops", "kind" : "object"}, {"label" : "apply", "tail" : "(instance: DefaultTransform[T]): DefaultTransform[T]", "member" : "com.spotify.featran.converters.DefaultTransform.apply", "link" : "com\/spotify\/featran\/converters\/DefaultTransform$.html#apply[T](implicitinstance:com.spotify.featran.converters.DefaultTransform[T]):com.spotify.featran.converters.DefaultTransform[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/converters\/DefaultTransform$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/converters\/DefaultTransform$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/converters\/DefaultTransform$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/converters\/DefaultTransform$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/converters\/DefaultTransform$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/converters\/DefaultTransform$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/converters\/DefaultTransform$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/converters\/DefaultTransform$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/converters\/DefaultTransform$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/converters\/DefaultTransform$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/converters\/DefaultTransform$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/converters\/DefaultTransform$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/featran\/converters\/DefaultTransform$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/converters\/DefaultTransform$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/featran\/converters\/DefaultTransform$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/featran\/converters\/DefaultTransform$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/converters\/DefaultTransform$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/converters\/DefaultTransform$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/converters\/DefaultTransform$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/spotify\/featran\/converters\/DefaultTransform.html", "kind" : "trait"}, {"name" : "com.spotify.featran.converters.RichBoolean", "shortDescription" : "", "members_class" : [{"label" : "asDouble", "tail" : "(): Double", "member" : "com.spotify.featran.converters.RichBoolean.asDouble", "link" : "com\/spotify\/featran\/converters\/package$$RichBoolean.html#asDouble:Double", "kind" : "final def"}, {"member" : "com.spotify.featran.converters.RichBoolean#<init>", "error" : "unsupported entity"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "com\/spotify\/featran\/converters\/package$$RichBoolean.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "com\/spotify\/featran\/converters\/package$$RichBoolean.html###():Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/converters\/package$$RichBoolean.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/converters\/package$$RichBoolean.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "com\/spotify\/featran\/converters\/package$$RichBoolean.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "com\/spotify\/featran\/converters\/package$$RichBoolean.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "com\/spotify\/featran\/converters\/package$$RichBoolean.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "com\/spotify\/featran\/converters\/package$$RichBoolean.html", "kind" : "class"}], "scala.collection.compat" : [], "org" : [], "com" : [], "com.spotify.featran.scio" : [{"name" : "com.spotify.featran.scio.ScioCollectionType", "shortDescription" : "CollectionType for extraction from Scio SCollection type.", "object" : "com\/spotify\/featran\/scio\/package$$ScioCollectionType$.html", "members_object" : [{"label" : "pure", "tail" : "(ma: SCollection[A])(b: B)(arg0: ClassTag[B]): SCollection[B]", "member" : "com.spotify.featran.scio.ScioCollectionType.pure", "link" : "com\/spotify\/featran\/scio\/package$$ScioCollectionType$.html#pure[A,B](ma:com.spotify.scio.values.SCollection[A])(b:B)(implicitevidence$3:scala.reflect.ClassTag[B]):com.spotify.scio.values.SCollection[B]", "kind" : "def"}, {"label" : "cross", "tail" : "(ma: SCollection[A])(mb: SCollection[B])(arg0: ClassTag[B]): SCollection[(A, B)]", "member" : "com.spotify.featran.scio.ScioCollectionType.cross", "link" : "com\/spotify\/featran\/scio\/package$$ScioCollectionType$.html#cross[A,B](ma:com.spotify.scio.values.SCollection[A])(mb:com.spotify.scio.values.SCollection[B])(implicitevidence$2:scala.reflect.ClassTag[B]):com.spotify.scio.values.SCollection[(A,B)]", "kind" : "def"}, {"label" : "reduce", "tail" : "(ma: SCollection[A])(f: (A, A) ⇒ A): SCollection[A]", "member" : "com.spotify.featran.scio.ScioCollectionType.reduce", "link" : "com\/spotify\/featran\/scio\/package$$ScioCollectionType$.html#reduce[A](ma:com.spotify.scio.values.SCollection[A])(f:(A,A)=>A):com.spotify.scio.values.SCollection[A]", "kind" : "def"}, {"label" : "map", "tail" : "(ma: SCollection[A])(f: (A) ⇒ B)(arg0: ClassTag[B]): SCollection[B]", "member" : "com.spotify.featran.scio.ScioCollectionType.map", "link" : "com\/spotify\/featran\/scio\/package$$ScioCollectionType$.html#map[A,B](ma:com.spotify.scio.values.SCollection[A])(f:A=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):com.spotify.scio.values.SCollection[B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/featran\/scio\/package$$ScioCollectionType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/featran\/scio\/package$$ScioCollectionType$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/featran\/scio\/package$$ScioCollectionType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/featran\/scio\/package$$ScioCollectionType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/featran\/scio\/package$$ScioCollectionType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/featran\/scio\/package$$ScioCollectionType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/featran\/scio\/package$$ScioCollectionType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/scio\/package$$ScioCollectionType$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/scio\/package$$ScioCollectionType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/featran\/scio\/package$$ScioCollectionType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/featran\/scio\/package$$ScioCollectionType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/featran\/scio\/package$$ScioCollectionType$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/featran\/scio\/package$$ScioCollectionType$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/featran\/scio\/package$$ScioCollectionType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/featran\/scio\/package$$ScioCollectionType$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/featran\/scio\/package$$ScioCollectionType$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/featran\/scio\/package$$ScioCollectionType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/featran\/scio\/package$$ScioCollectionType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/featran\/scio\/package$$ScioCollectionType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}]};